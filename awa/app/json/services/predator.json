{
    "authors": "D. Frishman & P. Argos",
    "classifications": [
        {
            "classification": "sequence:protein:2D_structure",
            "type": "mobyle1"
        },
        {
            "classification": "structure:2D_structure",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": "predator"
    },
    "comment": null,
    "description": "Protein secondary structure prediction from a single sequence or a set of sequences",
    "documentation_links": [],
    "env": [],
    "homepage_links": [],
    "inputs": {
        "children": [
            {
                "children": [
                    {
                        "argpos": "100",
                        "command": false,
                        "comment": null,
                        "ctrl": {
                            "perl": "not defined $alignment",
                            "python": "alignment is None"
                        },
                        "format": {
                            "perl": "(defined $value) ? \" $value\" : \"\"",
                            "python": "(\"\" , \" \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "sequences",
                        "paramfile": null,
                        "precond": {
                            "perl": "defined $sequences and not defined $alignment",
                            "python": "sequences is not None and alignment is None"
                        },
                        "prompt": "Protein sequence(s) File",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": "1,n",
                            "datatype": {
                                "class": "Sequence",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": [
                                "FASTA"
                            ]
                        }
                    },
                    {
                        "argpos": "101",
                        "command": false,
                        "comment": null,
                        "ctrl": {
                            "perl": "not defined sequences",
                            "python": "sequences is None"
                        },
                        "format": {
                            "perl": "(defined $value) ? \" $value\" : \"\"",
                            "python": "(\"\" , \" \" + str(value))[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "alignment",
                        "paramfile": null,
                        "precond": {
                            "perl": "defined $alignment and not defined $sequences",
                            "python": "alignment is not None and sequences is None"
                        },
                        "prompt": "Protein Alignment File",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Alignment",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": [
                                "FASTA",
                                "CLUSTAL",
                                "MSF"
                            ]
                        }
                    }
                ],
                "comment": "You must enter either a protein sequences or alignment file",
                "name": "inputfile",
                "precond": null,
                "prompt": "Input file"
            },
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -s\" : \"\"",
                            "python": "( \"\" , \" -s\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "single",
                        "paramfile": null,
                        "precond": {
                            "perl": "not $all",
                            "python": "not all"
                        },
                        "prompt": "Perform single sequence prediction. Ignore other sequences in the set for computing the prediction (-s)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Do not copy assignment directly from the PDB database if query sequence is found in PDB. By default, the known conformation of 7-residue segments will be used if they are identical to a 7-residue fragment in the query sequence.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -u\" : \"\"",
                            "python": "( \"\" , \" -u\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "dont_copy",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Do not copy assignment directly from the PDB database (-u)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Use DSSP target assignment (default is STRIDE). The predictions made with DSSP and STRIDE target assignments are optimized to reproduce these assignments as well as possible.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -d\" : \"\"",
                            "python": "( \"\" , \" -d\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "dssp",
                        "paramfile": null,
                        "precond": {
                            "perl": "defined $dssp_file",
                            "python": "dssp_file is not None"
                        },
                        "prompt": "Use DSSP target assignment (-d)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" -n$value\" : \"\"",
                            "python": "( \"\" , \" -n\" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "percentid",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Find a subset of sequences with no more than this identity between any pair of sequences (-n)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "prediction",
                "precond": null,
                "prompt": "Prediction options"
            },
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -a\" : \"\"",
                            "python": "( \"\" , \" -a\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "all",
                        "paramfile": null,
                        "precond": {
                            "perl": "not defined $seqid",
                            "python": "seqid is None"
                        },
                        "prompt": "Make prediction for All sequences in the input file (-a)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "This option is case sensitive!",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" -i$value\" : \"\"",
                            "python": "( \"\" , \" -i\" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "seqid",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Make prediction for this sequence (give its id) (-i)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "String",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" -x$value\" : \"\"",
                            "python": "( \"\" , \" -x\" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "stride_file",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "STRIDE file (-x)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "StrideReport",
                                "superclass": "Report"
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \" -y$value\" : \"\"",
                            "python": "( \"\" , \" -y\"+str( value ) )[ value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "dssp_file",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "DSSP file (-y)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "DsspOutput",
                                "superclass": "AbstractText"
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" -z$value\" : \" -z-\"",
                            "python": "( \" -z-\" , \" -z\" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "pdb_chain",
                        "paramfile": null,
                        "precond": {
                            "perl": "defined $dssp_file or defined $stride_file",
                            "python": "dssp_file is not None or stride_file is not None"
                        },
                        "prompt": "PDB Chain (-z)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "String",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "input",
                "precond": null,
                "prompt": "Input parameters"
            },
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Every output line contains residue number, three-letter residue name, one-letter residue name, predicted secondary structural state and reliability estimate. If a STRIDE or DSSP secondary structure assignment has been read (see other options), the known assignment will also be shown in the output for comparison. By default the short output form is used.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -l\" : \"\"",
                            "python": "( \"\" , \" -l\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "long",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Long output form (-l)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -h\" : \"\"",
                            "python": "( \"\" , \" -h\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "other_info",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Output other additional information if available (-h)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "output",
                "precond": null,
                "prompt": "Output parameters"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "predator",
    "outputs": {
        "children": [
            {
                "children": [
                    {
                        "comment": "Short output form:Secondary structure states of amino acids are indicated by the letters\n                \"H\" (helix), \"E\" (extended or sheet), and \"_\" (coil).Long output form ( option -L selected ):Secondary structure states of amino acids are indicated by letters \"H\"\n       or   \"h\" (helix),  \"E\"  or  \"e\" (extended), and \"C\" or \"c\" (coil). The\n       prediction is shown in lower case except for those residues for  which\n       the assignment was directly copied from the PDB database. This feature\n       is added so that you can distinguish between the predictions  actually\n       made by PREDATOR and those taken from known structures.\n       The  prediction is  contained  in  the records  beginning   with   the\n       identifier PRED in the first columns. For each amino acid site of your\n       sequence,  residue  number,  three-  and   one-letter   residue  code,\n       prediction,  reliability  estimate,  and  the  number of residues from\n       related sequences  projected  onto  this  residue  through  the  local\n       alignment  procedure are shown in subsequent columns. Additionally, if\n       the STRIDE or DSSP assignments have been read using the options -x  or\n       -y  (and  -z), the last column of the PREDATOR output will contain the\n       actual  secondary  structural  assignment  for  your  sequence  if  it\n       corresponds  exactly  to  the  one  in  the  STRIDE  or DSSP file (for\n       comparison). If the known assignment is not available,  i.e.,  if  you\n       did not use the -x or -y options, question signs will be output.Both output forms:If option -h has been used, PREDATOR will show  progress  by  printing\n       dots  on  the  standard output. If your sequence has related sequences\n       with known 3D structure, PDB identifiers of these  sequences  will  be\n       printed.",
                        "filenames": {
                            "python": "'predator.out'"
                        },
                        "hidden": false,
                        "main": false,
                        "name": "predator_output",
                        "output_type": "stdout",
                        "precond": null,
                        "prompt": null,
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Text",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "output",
                "precond": null,
                "prompt": "Output parameters"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [
        {
            "doi": null,
            "label": "Frishman, D. and Argos, P. (1996) Incorporation of long-distance interactions into a secondary structure prediction algorithm. Protein Engineering, 9, 133-142.",
            "url": null
        },
        {
            "doi": null,
            "label": "Frishman, D. and Argos, P. (1997) 75% accuracy in protein secondary structure prediction. Proteins, 27, 329-335.",
            "url": null
        },
        {
            "doi": null,
            "label": "Frishman,D and Argos,P. (1995) Knowledge-based secondary structure assignment. Proteins: structure, function and genetics, 23, 566-579.",
            "url": null
        },
        {
            "doi": null,
            "label": "Kabsch,W. and Sander,C. (1983) Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and geometrical features. Biopolymers, 22: 2577-2637.",
            "url": null
        }
    ],
    "source_links": [
        "ftp://ftp.ebi.ac.uk/pub/software/unix/predator/"
    ],
    "title": "PREDATOR",
    "type": "program",
    "version": "2.1.2"
}