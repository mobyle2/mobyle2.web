{
    "authors": null,
    "classifications": [
        {
            "classification": "phylogeny:others",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": null
    },
    "comment": "This program uses the compatibility method for unrooted two-state characters to obtain the largest cliques of characters and the trees\nwhich they suggest.",
    "description": "Compatibility Program",
    "documentation_links": [
        "http://bioweb2.pasteur.fr/docs/phylip/doc/clique.html"
    ],
    "env": [],
    "homepage_links": [],
    "inputs": {
        "children": [
            {
                "argpos": "0",
                "command": true,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"clique < clique.params\"",
                    "python": "\"clique < clique.params\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "clique",
                "paramfile": null,
                "precond": null,
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "-10",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"ln -s $infile infile && \"",
                    "python": "\"ln -s \"+ str( infile ) + \" infile && \""
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "infile",
                "paramfile": null,
                "precond": {
                    "perl": "$infile ne \"infile\"",
                    "python": "infile != \"infile\""
                },
                "prompt": "Input File",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "PhylipDiscreteCharMatrix",
                        "superclass": "AbstractText"
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "There should also be, in the input file after the numbers of species and characters, an A on the first line of the file. There must also be, before the character data, a line or lines giving the ancestral states for each character. It will look like the data for a species (the ancestor). It must start with the letter A in the first column. There then follow enough characters or blanks to complete the full length of a species name (e. g. ANCESTOR). Then the states which are\n              ancestral for the individual characters follow. These may be 0, 1 or ?, the latter indicating that the ancestral state is unknown.Examples:ANCESTOR 0010011",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"A\\\\n\" : \"\"",
                            "python": "( \"\" , \"A\\n\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "use_ancestral_state",
                        "paramfile": "clique.params",
                        "precond": null,
                        "prompt": "Use ancestral states in input file (A)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"C\\\\n$min_clique_size\\\\n\" : \"\"",
                            "python": "( \"\" , \"C\\n\"+ str( min_clique_size ) + \"\\n\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "spec_min_clique_size",
                        "paramfile": "clique.params",
                        "precond": null,
                        "prompt": "Specify minimum clique size? (C)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "2",
                        "command": false,
                        "comment": "This option indicates that you wish to specify a minimum clique size and print out all cliques (and their associated trees) greater than or equal to than that size.",
                        "ctrl": {
                            "perl": "$min_clique_size >= 0",
                            "python": "value >= 0"
                        },
                        "format": {
                            "perl": "\"\"",
                            "python": "\"\""
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "min_clique_size",
                        "paramfile": "clique.params",
                        "precond": {
                            "perl": "$spec_min_clique_size",
                            "python": "spec_min_clique_size"
                        },
                        "prompt": "Minimum clique size",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "clique_opt",
                "precond": null,
                "prompt": "Clique options"
            },
            {
                "children": [
                    {
                        "argpos": "10",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"M\\\\nD\\\\n$datasets_number\\\\n\" : \"\"",
                            "python": "( \"\" , \"M\\nD\\n\"+ str( datasets_number ) +\"\\n\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "multiple_dataset",
                        "paramfile": "clique.params",
                        "precond": {
                            "perl": "not $multiple_dataweights",
                            "python": "not multiple_dataweights"
                        },
                        "prompt": "Analyze multiple data sets (M)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "9",
                        "command": false,
                        "comment": null,
                        "ctrl": {
                            "perl": "$value > 0 and $value <= 1000",
                            "python": "( value > 0 ) and ( value <= 1000 )"
                        },
                        "format": {
                            "perl": "\"\"",
                            "python": "\"\""
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "datasets_number",
                        "paramfile": null,
                        "precond": {
                            "perl": "$multiple_dataset",
                            "python": "multiple_dataset"
                        },
                        "prompt": "How many data sets (D)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "10",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value )? \" && cp infile clique.infile &&  cp clique.outtree intree && consense <consense.params && mv outtree consense.outtree && mv outfile consense.outfile\" : \"\"",
                            "python": "( \"\", \" && cp infile clique.infile &&  cp clique.outtree intree && consense <consense.params && mv outtree consense.outtree && mv outfile consense.outfile\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "consense",
                        "paramfile": null,
                        "precond": {
                            "perl": "$multiple_dataset and $print_treefile",
                            "python": "multiple_dataset and print_treefile"
                        },
                        "prompt": "Compute a consensus tree",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "bootstrap",
                "precond": null,
                "prompt": "Bootstrap options"
            },
            {
                "children": [
                    {
                        "argpos": "19",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "( $value ) ? \"W\\\\n\" : \"\"",
                            "python": "( \"\" , \"W\\n\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "site_weigthed",
                        "paramfile": "clique.params",
                        "precond": null,
                        "prompt": "Sites weighted? (W)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "20",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"M\\\\nW\\\\n$dataweights_number\\\\n\" : \"\"",
                            "python": "( \"\" , \"M\\nW\\n\"+ str( dataweights_number ) +\"\\n\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "multiple_dataweights",
                        "paramfile": "clique.params",
                        "precond": {
                            "perl": "not $multiple_dataset",
                            "python": "not multiple_dataset"
                        },
                        "prompt": "Analyze multiple data Weigths (M)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "21",
                        "command": false,
                        "comment": null,
                        "ctrl": {
                            "perl": "$value > 0 and $value <= 1000",
                            "python": "( value > 0 ) and ( value <= 1000 )"
                        },
                        "format": {
                            "perl": "\"\"",
                            "python": "\"\""
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "dataweights_number",
                        "paramfile": null,
                        "precond": {
                            "perl": "$multiple_dataweights",
                            "python": "multiple_dataweights"
                        },
                        "prompt": "How many sets of weights?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "-20",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "\" ln -s $value weights && \"",
                            "python": "\" ln -s \" + str( value ) +\" weights && \""
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "weigth_file",
                        "paramfile": null,
                        "precond": {
                            "perl": "$site_weigthed or $multiple_dataweights",
                            "python": "site_weigthed or multiple_dataweights"
                        },
                        "prompt": "Weight file",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "PhylipWeight",
                                "superclass": "AbstractText"
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "weigths",
                "precond": null,
                "prompt": "Weigth options"
            },
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"3\\\\n\" : \"\"",
                            "python": "( \"\" , \"3\\n\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "print_matrix",
                        "paramfile": "clique.params",
                        "precond": null,
                        "prompt": "Print out compatibility matrix (3)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Tells the program to print a semi-graphical picture of the tree in the outfile.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"\" : \"4\\\\n\"",
                            "python": "( \"4\\n\" , \"\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "print_tree",
                        "paramfile": "clique.params",
                        "precond": null,
                        "prompt": "Print out tree (4)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Tells the program to save the tree in a treefile (a standard representation of trees where the tree is specified by a nested pairs of parentheses, enclosing names and separated by commas).",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"\" : \"5\\\\n\"",
                            "python": "( \"5\\n\" , \"\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "print_treefile",
                        "paramfile": "clique.params",
                        "precond": null,
                        "prompt": "Write out trees onto tree file (5)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"1\\\\n\" : \"\"",
                            "python": "( \"\" , \"1\\n\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "printdata",
                        "paramfile": "clique.params",
                        "precond": null,
                        "prompt": "Print out the data at start of run (1)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "output",
                "precond": null,
                "prompt": "Output options"
            },
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": {
                            "perl": "$value > 0",
                            "python": "value > 0"
                        },
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \"O\\\\n$value\\\\n\" : \"\"",
                            "python": "(\"\" , \"O\\\\n%s\\\\n\" % str(value) )[ value is not None and value != vdef ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "outgroup",
                        "paramfile": "clique.params",
                        "precond": null,
                        "prompt": "Outgroup root (O)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "other_options",
                "precond": null,
                "prompt": "Other options"
            },
            {
                "argpos": "1000",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"Y\\\\n\"",
                    "python": "\"Y\\n\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "confirm",
                "paramfile": "clique.params",
                "precond": null,
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "-1",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"0\\\\n\"",
                    "python": "\"0\\n\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "terminal_type",
                "paramfile": "clique.params",
                "precond": null,
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "1000",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"Y\\\\n\"",
                    "python": "\"Y\\n\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "consense_confirm",
                "paramfile": "consense.params",
                "precond": {
                    "perl": "$consense",
                    "python": "consense"
                },
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "-2",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"T\\\\n\"",
                    "python": "\"T\\n\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "consense_terminal_type",
                "paramfile": "consense.params",
                "precond": {
                    "perl": "$consense",
                    "python": "consense"
                },
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "clique",
    "outputs": {
        "children": [
            {
                "comment": null,
                "filenames": {
                    "perl": "\"clique.outfile\"",
                    "python": "\"clique.outfile\""
                },
                "hidden": false,
                "main": false,
                "name": "outfile",
                "output_type": "file",
                "precond": null,
                "prompt": "Output file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Text",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "comment": null,
                "filenames": {
                    "perl": "\"clique.outtree\"",
                    "python": "\"clique.outtree\""
                },
                "hidden": false,
                "main": false,
                "name": "treefile",
                "output_type": "file",
                "precond": {
                    "perl": "$print_treefile",
                    "python": "print_treefile"
                },
                "prompt": "Output tree",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Tree",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "NEWICK"
                    ]
                }
            },
            {
                "comment": null,
                "filenames": {
                    "perl": "\"consense.outfile\"",
                    "python": "\"consense.outfile\""
                },
                "hidden": false,
                "main": false,
                "name": "consense_outfile",
                "output_type": "file",
                "precond": {
                    "perl": "$consense",
                    "python": "consense"
                },
                "prompt": "Consense output file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Text",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "comment": null,
                "filenames": {
                    "perl": "\"consense.outtree\"",
                    "python": "\"consense.outtree\""
                },
                "hidden": false,
                "main": false,
                "name": "consense_treefile",
                "output_type": "file",
                "precond": {
                    "perl": "$consense",
                    "python": "consense"
                },
                "prompt": "Consense output tree",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Tree",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "NEWICK"
                    ]
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [],
    "source_links": [],
    "title": "clique",
    "type": "program",
    "version": null
}