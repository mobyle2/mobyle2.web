{
    "authors": null,
    "classifications": [
        {
            "classification": "sequence:protein:pattern",
            "type": "mobyle1"
        },
        {
            "classification": "sequence:nucleic:pattern",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": "scan_for_matches"
    },
    "comment": "Scan_for_matches is a utility to search for patterns in DNA and protein sequences.",
    "description": "Scan Nucleotide or Protein Sequences for Matching Patterns",
    "documentation_links": [
        "http://bioweb2.pasteur.fr/docs/scan_for_matches/scan_for_matches.txt"
    ],
    "env": [],
    "homepage_links": [],
    "inputs": {
        "children": [
            {
                "argpos": "100",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" < $value\"",
                    "python": "\" < \" + str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "sequence",
                "paramfile": null,
                "precond": null,
                "prompt": "Input sequence",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Sequence",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "FASTA"
                    ]
                }
            },
            {
                "argpos": "99",
                "command": false,
                "comment": "Some examples of pattern:- Simple Patterns Built by Matching Ranges and Reverse Complements:p1=4...7 3...8 ~p1 (three \"pattern units\" with: 4...7 which \"match 4 to 7 characters and call them p1\", 3...8 which \"match 3 to 8 characters\" and  ~pi \"match the reverse complement of p1\" )- Defining Pairing Rules and Allowing Mismatches, Insertions, and Deletionsr1={au,ua,gc,cg,gu,ug,ga,ag}p1=2...3 0...4 p2=2...5 1...5 r1~p2 0...4 ~p1 (p1=2...3     match 2 or 3 characters (call it p1), 0...4        match 0 to 4 characters, p2=2...5     match 2 to 5 characters (call it p2), 1...5        match 1 to 5 characters, r1~p2        match the reverse complement of p2 using rule r1, allowing G-A and A-G pairs, 0...4        match 0 to 4 characters, ~p1          match the reverse complement of p1 allowing only G-C, C-G, A-T, and T-A pairs)- Mismatches and bulgesp1=10...10 3...8 ~p1[1,2,1] (the third pattern unit must match 10 characters, allowing one \"mismatch\" (a pairing other than G-C, C-G, A-T, or T-A))-Searching for repeats:p1=6...6 3...8 p1   (find exact 6 character repeat separated by to 8 characters)p1=6...6 3..8 p1[1,0,0]   (allow one mismatch)p1=3...3 p1[1,0,0] p1[1,0,0] p1[1,0,0] (match 12 characters that are the remains of a 3-character sequence occurring 4 times)p1=4...8 0...3 p2=6...8 p1 0...3 p2 (This would match things like ATCT G TCTTT ATCT TG TCTTT)-Searching for particular sequences:p1=6...8 GAGA ~p1    (match a hairpin with GAGA as the loop)RRRRYYYY             (match 4 purines followed by 4 pyrimidines)TATAA[1,0,0]         (match TATAA, allowing 1 mismatch)",
                "ctrl": null,
                "format": {
                    "perl": "\" $value\"",
                    "python": "\" \" + str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "pat_file",
                "paramfile": null,
                "precond": null,
                "prompt": "Pattern file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "ScanPattern",
                        "superclass": "AbstractText"
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -c\" : \"\"",
                            "python": "( \"\" , \" -c\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "complementary_strand",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Search complementary strand (-c)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -p\" : \"\"",
                            "python": "( \"\" , \" -p\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "protein",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Protein sequence? (-p)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "control_options",
                "precond": null,
                "prompt": "Control options"
            },
            {
                "argpos": "101",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" > $value\"",
                    "python": "\" > \" + str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "outfile_name",
                "paramfile": null,
                "precond": null,
                "prompt": "Outfile name",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Filename",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "scan_for_matches",
    "outputs": {
        "children": [
            {
                "comment": null,
                "filenames": {
                    "perl": "outfile_name",
                    "python": "str(outfile_name)"
                },
                "hidden": false,
                "main": false,
                "name": "outfile",
                "output_type": "file",
                "precond": null,
                "prompt": "Output file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Text",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [],
    "source_links": [
        "ftp://ftp.mcs.anl.gov/pub/Genomics/PatScan/"
    ],
    "title": "scan_for_matches",
    "type": "program",
    "version": null
}