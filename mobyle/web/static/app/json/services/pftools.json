{
    "authors": "P. Bucher",
    "classifications": [
        {
            "classification": "sequence:nucleic:pattern",
            "type": "mobyle1"
        },
        {
            "classification": "sequence:protein:pattern",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": null
    },
    "comment": null,
    "description": "Profile Tools",
    "documentation_links": [],
    "env": [],
    "homepage_links": [],
    "inputs": {
        "children": [
            {
                "argpos": null,
                "command": true,
                "comment": "pfscan compares a protein or nucleic acid sequence against a profile library (default: Prosite).pfsearch compares a query profile against a DNA or protein sequence library.The result is an unsorted list of profile-sequence matches written to the standard output.",
                "ctrl": null,
                "format": {
                    "perl": "\"$value -v\"",
                    "python": "str(value) + \" -v\""
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "pftools",
                "paramfile": null,
                "precond": null,
                "prompt": "PFTOOLS program",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Choice",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "1",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" -f\"",
                    "python": "\" -f\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "fasta_format",
                "paramfile": null,
                "precond": null,
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "children": [
                    {
                        "argpos": "90",
                        "command": false,
                        "comment": "This DNA or protein sequence will be used to  search  for  matches  to  a library of PROSITE profiles.",
                        "ctrl": null,
                        "format": {
                            "perl": "\" $value\"",
                            "python": "\" \" + str(value)"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "seqfile",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Sequence File",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Sequence",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": [
                                "FASTA"
                            ]
                        }
                    },
                    {
                        "argpos": "100",
                        "command": false,
                        "comment": "Prosite library",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"",
                            "python": "( \"\" , \""
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "prosite",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Scan PROSITE db?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "100",
                        "command": false,
                        "comment": "This  file  should contain one or several PROSITE profiles, against which the query sequence will be matched.  Each entry in this library should be separated  from the next by a line containing only the code.",
                        "ctrl": null,
                        "format": {
                            "perl": "\" $value\"",
                            "python": "\" \" + str(value)"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "profiledb",
                        "paramfile": null,
                        "precond": {
                            "perl": "not $prosite",
                            "python": "not prosite"
                        },
                        "prompt": "Profile(s) file in PROSITE format",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "PrositeProfile",
                                "superclass": "AbstractText"
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "pfscan",
                "precond": {
                    "perl": "$pftools eq \"pfscan\"",
                    "python": "pftools == \"pfscan\""
                },
                "prompt": "PFSCAN parameters"
            },
            {
                "children": [
                    {
                        "argpos": "90",
                        "command": false,
                        "comment": "The PROSITE profile contained in this file will be  used  to  search  for profile  to  sequence  matches  in  a biological sequence library.",
                        "ctrl": null,
                        "format": {
                            "perl": "\" $value\"",
                            "python": "\" \" + str(value)"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "profile",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Profile(s) file in PROSITE format",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "PrositeProfile",
                                "superclass": "AbstractText"
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "The  program pfsearch  tries  to  identify  matches  between the input profile and all individual sequences of this library.",
                        "ctrl": {
                            "perl": "($aa_or_nuc_db eq \"protein\" and $aadb ne \"null\") or ( $aa_or_nuc_db eq \"user\" and defined $userdb) or ($aa_or_nuc_db eq \"dna\" and $nucdb ne \"null\")",
                            "python": "(aa_or_nuc_db == \"protein\" and aadb != \"null\") or (aa_or_nuc_db == \"user\" and userdb is not None) or (aa_or_nuc_db == \"dna\" and nucdb != \"null\")"
                        },
                        "format": {
                            "perl": "\"\"",
                            "python": "\"\""
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "aa_or_nuc_db",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Library of DNA or protein sequences?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "100",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value ne $vdef) ? \"",
                            "python": "(\"\", \""
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "aadb",
                        "paramfile": null,
                        "precond": {
                            "perl": "$aa_or_nuc_db eq \"protein\"",
                            "python": "aa_or_nuc_db == \"protein\""
                        },
                        "prompt": "Protein library",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "100",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value ne $vdef) ? \"",
                            "python": "(\"\", \""
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "nucdb",
                        "paramfile": null,
                        "precond": {
                            "perl": "$aa_or_nuc_db eq \"dna\"",
                            "python": "aa_or_nuc_db == \"dna\""
                        },
                        "prompt": "Nucleic library",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "100",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" $value\" : \"\"",
                            "python": "(\"\", \" \"+str(value) )[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "userdb",
                        "paramfile": null,
                        "precond": {
                            "perl": "$aa_or_nuc_db eq \"user\"",
                            "python": "aa_or_nuc_db == \"user\""
                        },
                        "prompt": "User library",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Sequence",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": [
                                "FASTA"
                            ]
                        }
                    },
                    {
                        "argpos": "110",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" | psa2msa - \" : \"\"",
                            "python": "( \"\"  , \" | psa2msa - \" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "psa2msa",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Reformat PSA result file to Fasta multiple sequence alignment file?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "pfsearch",
                "precond": {
                    "perl": "$pftools eq \"pfsearch\"",
                    "python": "pftools == \"pfsearch\""
                },
                "prompt": "PFSEARCH parameters"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "The value should be the numerical identifier  of  a  cut-off level  defined in the profile.  The raw or normalized score of this level will then be used to include profile to sequence matches  in  the  output list. If the specified level does not exist in the profile, the next higher (if cut_off is negative) or next lower (if cut_off is positive) level defined is used instead.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -C $value\" : \"\"",
                            "python": "(\"\" , \" -C \" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "cutoff",
                        "paramfile": null,
                        "precond": {
                            "perl": "not $optimal",
                            "python": "not optimal"
                        },
                        "prompt": "Cut-off level to be used for match selection (-C)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "The value specifies which normalization mode defined in the profile should be used to compute the normalized scores for profile  to  sequence matches. This option will override the profile's PRIORITY parameter. If  the  specified  normalization  mode does not exist in the profile, an error message will be output to standard error and the search  is  interrupted.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" -M $value\" : \"\"",
                            "python": "(\"\" , \" -M \" + str(value))[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "mode",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Normalization mode to use for score (-M)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -b\" : \"\"",
                            "python": "(\"\" , \" -b\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "compl",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Search the complementary strands of DNA sequences as well (-b)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -r\" : \"\"",
                            "python": "(\"\" , \" -r\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "raw_score",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Use raw scores rather than normalized scores for match selection. Normalized scores will not be listed in the output. (-r)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -u\" : \"\"",
                            "python": "(\"\" , \" -u\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "unique",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Forces DISJOINT=UNIQUE (-u)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "control",
                "precond": null,
                "prompt": "Control options"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option simultaneously forces DISJOINT=UNIQUE.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -a\" : \"\"",
                            "python": "(\"\" , \" -a\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "optimal",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Report optimal alignment scores for all sequences regardless of the cut-off value (-a)?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "If the profile is circular, each match between a sequence and  a  profile can  be  composed  of  a stretch of individual matches of the profile. By default, pfscan reports only the total matched region. When  this  option is  set, detailed information for each individual match will be output as well.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -m\" : \"\"",
                            "python": "(\"\" , \" -m\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "individual_match",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Report individual matches for circular profiles (-m)?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -l\" : \"\"",
                            "python": "(\"\" , \" -l\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "value_hightest_cut_off",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Indicate the value of the highest cut-off level  exceeded  by  the  match score (-l)?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "The generalized profile format includes a  text  string  field  to specify  a name for a cut-off level. The -L option causes the program to display the first two characters of this text string (usually something like !, ?, ??, etc.) at the beginning of each match description.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -L\" : \"\"",
                            "python": "(\"\" , \" -L\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "char_hightest_cut_off",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Indicate by  character  string of the highest cut-off level  exceeded  by  the  match score (-L)?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "If this option is set, the description of the profile on the header line will be limited in length. If the match information is  longer  than  the output  width specified using option -W, the profile description will not be printed. Else the description will be truncated to fit the -W value.By default, the profile description is not truncated. This option can not be used when option -k is set.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -d\" : \"\"",
                            "python": "(\"\" , \" -d\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "Length",
                        "paramfile": null,
                        "precond": {
                            "perl": "not $xpsa",
                            "python": "not xpsa"
                        },
                        "prompt": "Limit profile description length (-d)?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "When this option is set, all output type will use an xpsa style header line.This format uses keyword=value pairs to output  alignment  parameters.  It is useful to transfer information between different sequence alignment tools.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -k\" : \"\"",
                            "python": "(\"\" , \" -k\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "xpsa",
                        "paramfile": null,
                        "precond": {
                            "perl": "not $Length",
                            "python": "not Length"
                        },
                        "prompt": "xpsa headers for output (-k)?",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -s\" : \"\"",
                            "python": "(\"\" , \" -s\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "listseq",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "List the sequences of the matched regions as well. The output will be a Pearson/Fasta-formatted sequence library. (-s)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -x\" : \"\"",
                            "python": "(\"\" , \" -x\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "psa_format",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "List profile-sequence alignments in pftools PSA format. (-x)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -y\" : \"\"",
                            "python": "(\"\" , \" -y\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "between",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Display alignments between the profile and the matched sequence regions in a human-friendly format. (-y)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "The latter position will be given as a negative offset from the  end  of  the profile. Thus the range [1,-1] means entire profile.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -z\" : \"\"",
                            "python": "(\"\" , \" -z\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "start_end",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Indicate  starting  and ending position of the matched profile range. (-z)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "The value specifies how many residues will be  output  on  one line when any of the -s, -x or -y options is set.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -W $value\" : \"\"",
                            "python": "(\"\" , \" -W \"+str(value))[value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "width",
                        "paramfile": null,
                        "precond": {
                            "perl": "$listseq  or $psa_format  or $between",
                            "python": "listseq  or psa_format  or between"
                        },
                        "prompt": "Set alignment output width (-W)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "output",
                "precond": null,
                "prompt": "Output options"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "pftools",
    "outputs": {
        "children": [],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [
        {
            "doi": null,
            "label": "Bucher P, Karplus K, Moeri N and Hofmann, K. (1996). A flexible motif search technique based on generalized profiles. Comput. Chem. 20:3-24.",
            "url": null
        }
    ],
    "source_links": [
        "http://www.isrec.isb-sib.ch/ftp-server/pftools/"
    ],
    "title": "PFTOOLS",
    "type": "program",
    "version": "2.3"
}