{
    "authors": null,
    "classifications": [
        {
            "classification": "database:search:homology",
            "type": "mobyle1"
        },
        {
            "classification": "database:search:pattern",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": null
    },
    "comment": null,
    "description": "Position Specific Iterative Blast",
    "documentation_links": [],
    "env": [],
    "homepage_links": [],
    "inputs": {
        "children": [
            {
                "argpos": "0",
                "command": true,
                "comment": "The blastpgp program can do an iterative search in which sequences found in one round of searching are used to build a score model for the next round of searching. In this usage, the program is called Position-Specific Iterated BLAST, or PSI-BLAST. As explained in the accompanying paper, the BLAST algorithm is not tied to a specific score matrix. Traditionally, it has been implemented using an AxA substitution matrix where A is the alphabet size. PSI-BLAST instead uses a QxA matrix, where Q is the length of the query sequence; at each position the cost of a letter depends on the position w.r.t. the query and the letter in the subject sequence.The position-specific matrix for round i+1 is built from a constrained multiple alignment among the query and the sequences found with sufficiently low e-value in round i. The top part of the output for each round distinguishes the sequences into: sequences found previously and used in the score model, and sequences not used in the score model. The output currently includes lots of diagnostics requested by users at NCBI. To skip quickly from the output of one round to the next, search for the string 'producing', which is part of the header for each round and likely does not appear elsewhere in the output. PSI-BLAST 'converges' and stops if all sequences found at round i+1 below the e-value threshold were already in the model at the beginning of the round.",
                "ctrl": null,
                "format": {
                    "perl": "\"blastpgp\"",
                    "python": "\"blastpgp\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "psiblast",
                "paramfile": null,
                "precond": null,
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "3",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" -i $query\"",
                    "python": "\" -i \" + str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "query",
                "paramfile": null,
                "precond": null,
                "prompt": "Sequence File (-i)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Sequence",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "FASTA"
                    ]
                }
            },
            {
                "argpos": null,
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "(defined $value and $value != $vdef) ? \" -S $value\" : \"\"",
                    "python": "( \"\" , \" -S \" + str(value) )[ value is not None and value != vdef]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "start_region",
                "paramfile": null,
                "precond": null,
                "prompt": "Start of required region in query (-S)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": null,
                "command": false,
                "comment": "Location on query sequence. -1 indicates end of query",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value and $value != $vdef) ? \" -H $value\" : \"\"",
                    "python": "( \"\" , \" -H \" + str(value) )[ value is not None and value != vdef]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "end_region",
                "paramfile": null,
                "precond": null,
                "prompt": "End of required region in query (-H)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "2",
                "command": false,
                "comment": "Choose a protein db for blastp or blastx.",
                "ctrl": null,
                "format": {
                    "perl": "\" -d $value\"",
                    "python": "\" -d \" + str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "protein_db",
                "paramfile": null,
                "precond": null,
                "prompt": "Protein database (-d )",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Choice",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -G $value\" : \"\"",
                            "python": "( \"\" , \" -G \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "open_a_gap",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Cost to open a gap (-G)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Limited values for gap existence and extension are supported for these three programs. Some supported and suggested values are:Existence Extension10 -- 110 -- 211 -- 18 -- 29 -- 2(source: NCBI Blast page)",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -E $value\" : \"\"",
                            "python": "( \"\" , \" -E \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "extend_a_gap",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Cost to extend a gap (-E)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value ne $vdef)? \" -M $value\" : \"\"",
                            "python": "( \"\" , \" -M \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "matrix",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Similarity matrix (-M)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "scoring",
                "precond": null,
                "prompt": "Scoring option"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -F T\" : \"\"",
                            "python": "( \"\" , \" -F T\" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "filter",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Filter query sequence with SEG (-F)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option specifies that any lower-case letters in the input FASTA file should be masked.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" -U T\" : \"\"",
                            "python": "(\"\", \" -U T\")[value]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "lower_case",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Use lower case filtering (-U)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": "This options also takes a string as an argument.  One may use such a string to change the specific parameters of seg or invoke other filters. Please see the 'Filtering Strings' section (below) for details.",
                "name": "filter_opt",
                "precond": null,
                "prompt": "Filtering and masking options"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "The statistical significance threshold for reporting matches against database sequences; the default value is 10, such that 10 matches are expected to be found merely by chance, according to the stochastic model of Karlin and Altschul (1990). If the statistical significance ascribed to a match is greater than the EXPECT threshold, the match will not be reported. Lower EXPECT thresholds are more stringent, leading to fewer chance matches being reported. Fractional values are acceptable.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -e $value\":\"\"",
                            "python": "(\"\" , \" -e \" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "Expect",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Expected value (-e)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Use words of size N.Zero invokes default behaviorDefault value: 3",
                        "ctrl": {
                            "perl": "$value >= 2 and $value <=3",
                            "python": "value >= 2 and value <=3"
                        },
                        "format": {
                            "perl": "(defined $value) ? \" -W $value\" : \"\"",
                            "python": "(\"\" , \" -W \"+str(value))[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "word_size",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Word Size (-W)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "When  multiple   hits  method  is  used,  this parameter defines the distance from last hit on the same diagonal to the new one.Zero means single hit algorithm.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -A $value\" : \"\"",
                            "python": "( \"\" , \" -A \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "window",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Multiple hits window size (-A)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Blast seeks first short word pairs whose aligned score reaches at least this value",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -f $value\" : \"\"",
                            "python": "( \"\" , \" -f \" + str(value) )[ value is not None and value !=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "extend_hit",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Threshold for extending hits (-f)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This is the value that control the path graph region explored by Blast during a gapped extension (Xg in the NAR paper).",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \" -X $value\":\"\"",
                            "python": "(\"\" , \" -X \" + str(value))[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "dropoff",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "X dropoff value for gapped alignment (-X)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This parameter controls the dropoff for the final reported alignment. See also the -X parameter.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -Z $value\" : \"\"",
                            "python": "( \"\" , \" -Z \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "dropoff_z",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "X dropoff value for final gapped alignment (-Z)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This parameter controls the dropoff at ungapped extension stage. See also the -X parameter.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -y $value\" : \"\"",
                            "python": "( \"\" , \" -y \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "dropoff_y",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Dropoff for blast ungapped extensions in bits (-y)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Use zero for the real size",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -Y $value\" : \"\"",
                            "python": "(\"\" , \" -Y \"+str(value))[value is not None and value !=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "eff_len",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Effective length of the search space (-Y)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "If this option is used, a value of 100 is recommended.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" -K $value\" : \"\"",
                            "python": "(\"\" , \" -K \"+str(value))[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "keep_hits",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Number of best hits from a region to keep (-K)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value eq \"0\") ? \" -P $value\" : \"\"",
                            "python": "(\"\" , \" -P \"+str(value))[value != \"0\"]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "mode",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Single-hit or multiple-hit mode (-P)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -N $value\" : \"\"",
                            "python": "(\"\" , \" -N \"+str(value))[value is not None and value !=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "nb_bits",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Number of bits to trigger gapping (-N)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "selectivity_opt",
                "precond": null,
                "prompt": "Selectivity options"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -j $value\" : \"\"",
                            "python": "( \"\" , \" -j \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "max_passes",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Maximum number of passes to use in  multipass version (-j)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -h $value\" : \"\"",
                            "python": "( \"\" , \" -h \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "expect_in_multipass",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "e-value threshold for inclusion in multipass model (-h)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This constant is the weight given to a pre-calculated residue target frequency (versus the observed one) in a column of the position specific matrix. The larger its value, the greater the emphasis given to prior knowledge of residue relationships vis a vis observed residue frequencies (beta constant in NAR paper).",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -c $value\" : \"\"",
                            "python": "( \"\" , \" -c \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "pseudocounts",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Constant in pseudocounts for multipass version (-c)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "psi_spec_opt",
                "precond": null,
                "prompt": "PSI-Blast specific selectivity options"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Maximum number of database sequences for which one-line descriptions will be reported.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -v $value\" : \"\"",
                            "python": "( \"\" , \" -v \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "Descriptions",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Number of one-line descriptions to show? (-v)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Maximum number of database sequences for which high-scoring segment pairs will be reported (-b).",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -b $value\" : \"\"",
                            "python": "( \"\" , \" -b \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "Alignments",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Number of database sequences to show alignments? (-b)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value ne $vdef)? \" -m $value\" : \"\"",
                            "python": "( \"\"  , \" -m \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "view_alignments",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Alignment view options (-m)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "10",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "\" -o psiblast.txt\"",
                            "python": "\" -o psiblast.txt\""
                        },
                        "hidden": true,
                        "main": false,
                        "mandatory": false,
                        "name": "txtoutput",
                        "paramfile": null,
                        "precond": {
                            "perl": "$view_alignments ne \"7\"",
                            "python": "view_alignments != \"7\""
                        },
                        "prompt": "Text output file",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "String",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "10",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "\" -o psiblast.xml\"",
                            "python": "\" -o psiblast.xml\""
                        },
                        "hidden": true,
                        "main": false,
                        "mandatory": false,
                        "name": "xmloutput",
                        "paramfile": null,
                        "precond": {
                            "perl": "$view_alignments eq \"7\"",
                            "python": "view_alignments == \"7\""
                        },
                        "prompt": "XML output file",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "String",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "11",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" && html4blast -g -o psiblast.html psiblast.txt\" : \"\"",
                            "python": "(\"\" , \" && html4blast -g -o psiblast.html psiblast.txt\")[value]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "htmloutput",
                        "paramfile": null,
                        "precond": {
                            "perl": "$view_alignments !~ /^[78]$/",
                            "python": "view_alignments not in [ \"7\" , \"8\" ]"
                        },
                        "prompt": "Html output",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value)? \" -J\":\"\"",
                            "python": "(\"\" , \" -J\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "believe",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Believe the query defline (-J)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "SeqAlign is in ASN.1 format, so that it can be read with NCBI tools (such as sequin). This allows one to view the results in different formats.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \" -O $value\" : \"\"",
                            "python": "( \"\" , \" -O \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "seqalign_file",
                        "paramfile": null,
                        "precond": {
                            "perl": "$believe",
                            "python": "believe"
                        },
                        "prompt": "SeqAlign file (-J option must be true) (-O)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Filename",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "affichage",
                "precond": null,
                "prompt": "Report options"
            },
            {
                "argpos": null,
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" -C $save_matrix\" : \"\"",
                    "python": "( \"\" , \" -C \"+ str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "save_matrix",
                "paramfile": null,
                "precond": {
                    "perl": "$max_passes > 1",
                    "python": "max_passes > 1"
                },
                "prompt": "Save PSI-Blast Matrix to file (-C)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Filename",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": null,
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "(defined $value)? \" -Q $save_txt_matrix\" : \"\"",
                    "python": "( \"\" , \" -Q \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "save_txt_matrix",
                "paramfile": null,
                "precond": {
                    "perl": "$max_passes > 1",
                    "python": "max_passes > 1"
                },
                "prompt": "Save PSI-BLAST Matrix as text to file (-Q)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Filename",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "psiblast",
    "outputs": {
        "children": [
            {
                "comment": null,
                "filenames": {
                    "perl": "\"psiblast.txt\"",
                    "python": "\"psiblast.txt\""
                },
                "hidden": false,
                "main": false,
                "name": "txtfile",
                "output_type": "file",
                "precond": {
                    "perl": "$view_alignments ne \"7\"",
                    "python": "view_alignments != \"7\""
                },
                "prompt": "Blast text report",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "BlastTextReport",
                        "superclass": "Report"
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "comment": null,
                "filenames": {
                    "perl": "\"psiblast.xml\"",
                    "python": "\"psiblast.xml\""
                },
                "hidden": false,
                "main": false,
                "name": "xmlfile",
                "output_type": "file",
                "precond": {
                    "perl": "$view_alignments eq \"7\"",
                    "python": "view_alignments == \"7\""
                },
                "prompt": "Blast xml report",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "BlastXmlReport",
                        "superclass": "Report"
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "comment": null,
                "filenames": {
                    "perl": "\"psiblast.html\"",
                    "python": "\"psiblast.html\""
                },
                "hidden": false,
                "main": false,
                "name": "htmlfile",
                "output_type": "file",
                "precond": {
                    "perl": "$view_alignments !~ /^[78]$/",
                    "python": "view_alignments not in [\"7\", \"8\"]"
                },
                "prompt": "Blast html report",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "BlastHtmlReport",
                        "superclass": "Report"
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "comment": null,
                "filenames": {
                    "perl": "\"*.gif\"",
                    "python": "\"*.gif\""
                },
                "hidden": true,
                "main": false,
                "name": "imgfile",
                "output_type": "file",
                "precond": {
                    "perl": "$view_alignments !~ /^[78]$/",
                    "python": "view_alignments not in [\"7\", \"8\"]"
                },
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Picture",
                        "superclass": "Binary"
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [
        {
            "doi": null,
            "label": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer,Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.",
            "url": null
        }
    ],
    "source_links": [],
    "title": "PSI-Blast",
    "type": "program",
    "version": null
}