{
    "authors": "A. Rambaut, N. C. Grassly",
    "classifications": [
        {
            "classification": "phylogeny:likelihood",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": null
    },
    "comment": "Seq-Gen is a program that will simulate the evolution of nucleotide or amino acid sequences along a phylogeny, using common models of the substitution process.",
    "description": "Sequence-Generator",
    "documentation_links": [
        "http://bioweb2.pasteur.fr/docs/seq-gen/index.html"
    ],
    "env": [],
    "homepage_links": [
        "http://tree.bio.ed.ac.uk/software/seqgen/"
    ],
    "inputs": {
        "children": [
            {
                "argpos": "0",
                "command": true,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"seq-gen\"",
                    "python": "\"seq-gen\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "seqgen",
                "paramfile": null,
                "precond": null,
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "0",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"< $value\"",
                    "python": "\"< \" + str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "intree",
                "paramfile": null,
                "precond": null,
                "prompt": "Input tree file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Tree",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option allows the user to set the length in nucleotides that each simulated sequence should be.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -l $value\":\"\"",
                            "python": "(\"\" , \" -l \" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "Length",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Sequence length (-l)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option specifies how many separate datasets should be simulated for each tree in the tree file.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -n $value\":\"\"",
                            "python": "(\"\" , \" -n \" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "datasets",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Number of simulated datasets per tree (-n)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Number of partion specifies how many partitions of each data set should be simulated. each partition must have its own tree and number specifying how many sites are in partition. Multiple sets of trees are being inputed with varying numbers of partitions, then this should specify the maximum number of partitions that will be required",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -p $value\":\"\"",
                            "python": "(\"\" , \" -p \" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "partition_numb",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Number of partitions for each dataset (-p)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option allows the user to set a value with which to scale the branch lengths in order to make them equal the expected number of substitutions per site for each branch. Basically Seq-Gen multiplies each branch length by this value.For example if you give an value of 0.5 then each branch length would be halved before using it to simulate the sequences.",
                        "ctrl": {
                            "perl": "$value > 0",
                            "python": "value > 0"
                        },
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -s $value\":\"\"",
                            "python": "(\"\" , \" -s \" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "scale_branch",
                        "paramfile": null,
                        "precond": {
                            "perl": "not defined $scale_tree",
                            "python": "scale_tree is None"
                        },
                        "prompt": "Scale branch lengths  (number greater > 0) (-s)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option allows the user to set a value which is the desired length of each tree in units of substitutions per site. The term 'tree length' here is the distance from the root to any one of the tips in units of mean number of substitutions per site. This option can only be used when the input trees are rooted and ultrametric (no difference in rate amongst the lineages). This has the effect of making all the trees in the input file of the same length before simulating data.The option multiplies each branch length by a value equal to SCALE divided by the actual length of the tree.",
                        "ctrl": {
                            "perl": "$value > 0",
                            "python": "value > 0"
                        },
                        "format": {
                            "perl": "(defined $value)? \" -d $value\":\"\"",
                            "python": "(\"\" , \" -d \" + str(value))[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "scale_tree",
                        "paramfile": null,
                        "precond": {
                            "perl": "$scale_branch != 1.0",
                            "python": "scale_branch != 1.0"
                        },
                        "prompt": "Total tree scale  (a decimal number greater > 0)  (-d)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option allows the user to use a supplied sequence as the ancestral sequence at the root (otherwise a random sequence is used). The value is an integer number greater than zero which refers to one of the sequences supplied as input with the tree.Method: The user can supply a sequence alignment as input, as well as the trees. This should be in relaxed PHYLIP format. The trees can then be placed in this file at the end, after a line stating how many trees there are. The file may look like this:4 50Taxon1 ATCTTTGTAGTCATCGCCGTATTAGCATTCTTAGATCTAATaxon2 ATCCTAGTAGTCGCTTGCGCACTAGCCTTCCGAAATCTAGTaxon3 ACTTCTGTGTTTACTGAGCTACTAGCTTCCCTAAATCTAGTaxon4 ATTCCTATATTCGCTAATTTCTTAGCTTTCCTGAATCTGG1(((Taxon1:0.2,Taxon2:0.2):0.1,Taxon3:0.3):0.1,Taxon4:0.4);Note that the labels in the alignment do not have to match those in the tree (the ones in the tree will be used for output)   there doesn't even have to be the same number of taxa in the alignment as in the trees. The sequence length supplied by the alignment will be used to obtain the simulated sequence length (unless the  l option is set). The  k option also refers to one of the sequences to specify the ancestral sequence. (see Appendix A)",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \" -k $value\":\"\"",
                            "python": "(\"\" , \" -k \" + str(value))[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "input_seq",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Ancestral Sequence number (-k)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "input",
                "precond": null,
                "prompt": "Input parameters"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value )? \" -m $value\" : \"\"",
                            "python": "( \"\"  , \" -m \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "model",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Model of  substitution (-m)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Using this option the user may specify a shape for the gamma rate heterogeneity. The default is no site-specific rate heterogeneity. Enter a decimal number.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \" -a $value\":\"\"",
                            "python": "(\"\" , \" -a \" + str(value))[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "shape",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Shape of the gamma distribution to use  with  gamma rate heterogeneity (-a)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Using this option the user may specify the number of categories for the discrete gamma rate heterogeneity model. The default is no site-specific rate heterogeneity (or the continuous model if only the -a option is specified. Enter an integer number between 2 and 32",
                        "ctrl": {
                            "perl": "$value >= 2 and $value <= 32",
                            "python": "value >= 2 and value <= 32"
                        },
                        "format": {
                            "perl": "(defined $value)? \" -g $value\":\"\"",
                            "python": "(\"\" , \" -g \" + str(value))[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "categories",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Number of categories  for  the  discrete gamma  rate  heterogeneity model (-g)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Specify the proportion of sites that should be invariable. These sites will be chosen randomly with this expected frequency. The default is no invariable sites. Invariable sites are sites thar cannot change as opposed to sites which don't exhibit any changes due to chance (and perhaps a low rate). Enter a real number between 0.0 and  1.0",
                        "ctrl": {
                            "perl": "$value >= 0.0 and $value <= 1.0",
                            "python": "value >= 0.0 and value <= 1.0"
                        },
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \" -i $value\":\"\"",
                            "python": "(\"\" , \" -i \" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "invar_site",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Proportion of sites that should be invariable (-i)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "substitution",
                "precond": null,
                "prompt": "Substitution model options"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Enter a decimal numberYou can only have codon rates when using nucleotide models of substitution.",
                                "ctrl": null,
                                "format": {
                                    "perl": "\"\"",
                                    "python": "\"\""
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "rate1",
                                "paramfile": null,
                                "precond": null,
                                "prompt": "First position",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Enter a decimal number",
                                "ctrl": null,
                                "format": {
                                    "perl": "\"\"",
                                    "python": "\"\""
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "rate2",
                                "paramfile": null,
                                "precond": null,
                                "prompt": "Second position",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Enter a decimal number",
                                "ctrl": null,
                                "format": {
                                    "perl": "\"\"",
                                    "python": "\"\""
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "rate3",
                                "paramfile": null,
                                "precond": null,
                                "prompt": "Third position (enter a decimal number)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": null,
                                "ctrl": null,
                                "format": {
                                    "perl": "\" -c $rate1 $rate2 $rate3\"",
                                    "python": "\" -c %f %f %f \" %(rate1,rate2,rate3)"
                                },
                                "hidden": true,
                                "main": false,
                                "mandatory": false,
                                "name": "rateAll",
                                "paramfile": null,
                                "precond": {
                                    "perl": "defined $rate1  and defined $rate2 and defined $rate3",
                                    "python": "rate1 is not None and rate2 is not None and rate3 is not None"
                                },
                                "prompt": "Rates",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            }
                        ],
                        "comment": "Using this option the user may specify the relative rates for each codon position. This allows codon-specific rate heterogeneity to be simulated. The default is no site-specific rate heterogeneity.You can only have codon rates when using nucleotide models of substitution.",
                        "name": "rate",
                        "precond": null,
                        "prompt": "Rates for codon position heterogeneity (-c)"
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option allows the user to set a value for the transition transversion ratio (TS/TV). This is only valid when either the HKY or F84 model has been selected.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \" -t $value\":\"\"",
                            "python": "(\"\" , \" -t \" + str(value))[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "transratio",
                        "paramfile": null,
                        "precond": {
                            "perl": "$model eq 'HKY' or $model eq 'F84'",
                            "python": "model =='HKY' or model == 'F84'"
                        },
                        "prompt": "Transition transversion ratio (TS/TV) for HKY or F84 model (-t)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "This option allows the user to set 6 values for the general reversable model's rate matrix. This is only valid when either the REV model has been selected.The values are six decimal numbers for the rates of transition from A to C, A to G, A to T, C to G, C to T and G to T respectively, separated by spaces or commas. The matrix is symmetrical so the reverse transitions equal the ones set (e.g. C to A equals A to C) and therefore only six values need be set. These values will be scaled such that the last value (G to T) is 1.0 and the others are set relative to this.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value ne $vdef)? \" -r $value\":\"\"",
                            "python": "(\"\" , \" -r \" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "matrix",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "6 values  for  the general reversable model's rate matrix (ACTG x ACTG)  separated by one space (-r)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "String",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "children": [
                            {
                                "argpos": null,
                                "command": false,
                                "comment": null,
                                "ctrl": null,
                                "format": {
                                    "perl": "\"\"",
                                    "python": "\"\""
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "freqA",
                                "paramfile": null,
                                "precond": null,
                                "prompt": "Frequencies of the A nucleotide",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": null,
                                "ctrl": null,
                                "format": {
                                    "perl": "\"\"",
                                    "python": "\"\""
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "freqC",
                                "paramfile": null,
                                "precond": null,
                                "prompt": "Frequencies of the C nucleotide",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": null,
                                "ctrl": null,
                                "format": {
                                    "perl": "\"\"",
                                    "python": "\"\""
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "freqG",
                                "paramfile": null,
                                "precond": null,
                                "prompt": "Frequencies of the G nucleotide",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": null,
                                "ctrl": null,
                                "format": {
                                    "perl": "\"\"",
                                    "python": "\"\""
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "freqT",
                                "paramfile": null,
                                "precond": null,
                                "prompt": "Frequencies of the T nucleotide",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": null,
                                "ctrl": null,
                                "format": {
                                    "perl": "\" -f $freqA,$freqC,$freqG,$freqT\"",
                                    "python": "\" -f \" + str(freqA) + \",\" + str(freqC) + \",\" + str(freqG) + \",\" + str(freqT)"
                                },
                                "hidden": true,
                                "main": false,
                                "mandatory": false,
                                "name": "freqAll",
                                "paramfile": null,
                                "precond": {
                                    "perl": "defined $freqA and defined $freqC and defined $freqG and defined $freqT",
                                    "python": "freqA is not None and freqC is not None and freqG is not None and freqT is not None"
                                },
                                "prompt": "Frequencies",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "String",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            }
                        ],
                        "comment": "This option is used to specify the relative frequencies of the four nucleotides. By default, Seq-Gen will assume these to be equal. If the given values don't sum to 1.0 then they will be scaled so that they do.You must give the frequencies for the 4 nucleotides",
                        "name": "frequencies",
                        "precond": null,
                        "prompt": "Relative frequencies of nucleotides (-f)"
                    }
                ],
                "comment": null,
                "name": "nucleotide_opt",
                "precond": null,
                "prompt": "Nucleotid model specific options"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option allows to specify a seed for the random number generator. Using the same seed (with the same input) will result in identical simulated datasets. This is useful because you can recreate a set of simulations, you must use exactly the same model options",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \"-z $value\":\"\"",
                            "python": "(\"\" , \"-z \" + str(value))[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "random_seed",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Random number seed (-z)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "miscellaneous_opt",
                "precond": null,
                "prompt": "Miscellaneous options"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value ne $vdef)? \" -o$value\":\"\"",
                            "python": "(\"\" , \" -o\" + str(value))[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "output_format",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Output file format (-o)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value)? \" -q\":\"\"",
                            "python": "(\"\" , \" -q\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "quiet",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Non verbose output (-q)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option allows to obtain the sequences for each of the internal nodes in the tree. The sequences are written out along with the sequences for the tips of the tree in relaxed PHYLIP format.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value)? \" -wa\":\"\"",
                            "python": "(\"\" , \" -wa\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "write_ancest",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Write the ancestral sequences (-wa)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "This option allows to obtain the relative\n\t      rate of substitution for each sites as used in each\n\t      simulation. This will go to stderr and will be produced\n\t      for each replicate simulation.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value)? \" -wr\":\"\"",
                            "python": "(\"\" , \" -wr\")[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "write_sites",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Write the sites rates (-wr)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "output",
                "precond": null,
                "prompt": "Output parameters"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "seqgen",
    "outputs": {
        "children": [
            {
                "children": [
                    {
                        "comment": null,
                        "filenames": {
                            "perl": "\"seqgen.out\"",
                            "python": "\"seqgen.out\""
                        },
                        "hidden": false,
                        "main": false,
                        "name": "outfile",
                        "output_type": "stdout",
                        "precond": null,
                        "prompt": "Output alignment file",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Alignment",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": [
                                {
                                    "#children": [
                                        "PHYLIPI"
                                    ],
                                    "#tag": "test",
                                    "@eq": "p",
                                    "@param": "output_format"
                                }
                            ]
                        }
                    }
                ],
                "comment": null,
                "name": "output",
                "precond": null,
                "prompt": "Output parameters"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [
        {
            "doi": null,
            "label": "Rambaut, A. and Grassly, N. C. (1996) Seq-Gen: An application for the Monte Carlo simulation of DNA sequence evolution along phylogenetic trees. Comput. Appl. Biosci.",
            "url": null
        }
    ],
    "source_links": [
        "http://tree.bio.ed.ac.uk/download.html?name=seqgen&version=v1.3.2&id=41&num=1"
    ],
    "title": "SeqGen",
    "type": "program",
    "version": "1.3.2"
}