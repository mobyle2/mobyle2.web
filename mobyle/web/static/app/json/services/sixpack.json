{
    "authors": null,
    "classifications": [
        {
            "classification": "display:nucleic:gene_finding",
            "type": "mobyle1"
        },
        {
            "classification": "display:nucleic:translation",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": "sixpack"
    },
    "comment": null,
    "description": "Display a DNA sequence with 6-frame translation and ORFs",
    "documentation_links": [
        "http://bioweb2.pasteur.fr/docs/EMBOSS/sixpack.html",
        "http://emboss.sourceforge.net/docs/themes"
    ],
    "env": [],
    "homepage_links": [],
    "inputs": {
        "children": [
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "python": "(\"\", \" -sequence=\" + str(value))[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "e_sequence",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "sequence option",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [
                                "DNA"
                            ],
                            "card": "1,1",
                            "datatype": {
                                "class": "Sequence",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": [
                                "EMBL",
                                "FASTA",
                                "GCG",
                                "GENBANK",
                                "NBRF",
                                "PIR",
                                "RAW",
                                "SWISSPROT",
                                "GFF"
                            ]
                        }
                    }
                ],
                "comment": null,
                "name": "e_input",
                "precond": null,
                "prompt": "Input section"
            },
            {
                "children": [
                    {
                        "argpos": "2",
                        "command": false,
                        "comment": "Genetics code used for the translation",
                        "ctrl": null,
                        "format": {
                            "python": "(\"\", \" -table=\" + str(value))[value is not None and value!=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_table",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Genetic codes",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Count the beginning of a sequence as a possible ORF, even if it's inferior to the minimal ORF size.",
                        "ctrl": null,
                        "format": {
                            "python": "(\" -nofirstorf\", \"\")[ bool(value) ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_firstorf",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Orf at the beginning of the sequence",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "4",
                        "command": false,
                        "comment": "Count the end of a sequence as a possible ORF, even if it's not finishing with a STOP, or inferior to the minimal ORF size.",
                        "ctrl": null,
                        "format": {
                            "python": "(\" -nolastorf\", \"\")[ bool(value) ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_lastorf",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Orf at the end of the sequence",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "5",
                        "command": false,
                        "comment": "Displays only ORFs starting with an M.",
                        "ctrl": null,
                        "format": {
                            "python": "(\"\", \" -mstart\")[ bool(value) ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_mstart",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Orf start with an m",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "e_additional",
                "precond": null,
                "prompt": "Additional section"
            },
            {
                "children": [
                    {
                        "argpos": "6",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "python": "(\"\" , \" -outfile=\" + str(value))[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_outfile",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Name of the output file (e_outfile)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Filename",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "7",
                        "command": false,
                        "comment": "ORF sequence output",
                        "ctrl": null,
                        "format": {
                            "python": "(\"\" , \" -outseq=\" + str(value))[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_outseq",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Name of the output sequence file (e_outseq)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [
                                "Protein"
                            ],
                            "card": null,
                            "datatype": {
                                "class": "Filename",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "8",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "python": "(\"\", \" -osformat=\" + str(value))[value is not None and value!=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_osformat_outseq",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Choose the sequence output format",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [
                                "Protein"
                            ],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "9",
                        "command": false,
                        "comment": "Display also the translation of the DNA sequence in the 3 reverse frames",
                        "ctrl": null,
                        "format": {
                            "python": "(\" -noreverse\", \"\")[ bool(value) ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_reverse",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Display translation of reverse sense",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "10",
                        "command": false,
                        "comment": "Minimum size of Open Reading Frames (ORFs) to display in the translations.",
                        "ctrl": {
                            "python": "value >= 1"
                        },
                        "format": {
                            "python": "(\"\", \" -orfminsize=\" + str(value))[value is not None and value!=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_orfminsize",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Minimum size of orfs (value greater than or equal to 1)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "11",
                        "command": false,
                        "comment": "Regions to put in uppercase. \n If this is left blank, then the sequence case is left alone. \n  A set of regions is specified by a set of pairs of positions. \n  The positions are integers. \n  They are separated by any non-digit, non-alpha character. \n  Examples of region specifications are: \n  24-45, 56-78 \n  1:45, 67=99;765..888 \n  1,5,8,10,23,45,57,99",
                        "ctrl": null,
                        "format": {
                            "python": "(\"\", \" -uppercase=\" + str(value))[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_uppercase",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Regions to put in uppercase (eg: 4-57,78-94)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "String",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "12",
                        "command": false,
                        "comment": "Regions to colour if formatting for HTML. \n If this is left blank, then the sequence is left alone. \n  A set of regions is specified by a set of pairs of positions. \n  The positions are integers. \n  They are followed by any valid HTML font colour. \n  Examples of region specifications are: \n  24-45 blue 56-78 orange \n  1-100 green 120-156 red \n  A file of ranges to colour (one range per line) can be specified as  '@filename'.",
                        "ctrl": null,
                        "format": {
                            "python": "(\"\", \" -highlight=\" + str(value))[value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_highlight",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Regions to colour in html (eg: 4-57 red 78-94 green)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "String",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "13",
                        "command": false,
                        "comment": "Number the sequence at the beginning and the end of each line.",
                        "ctrl": null,
                        "format": {
                            "python": "(\" -nonumber\", \"\")[ bool(value) ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_number",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Number the sequences",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "14",
                        "command": false,
                        "comment": "Number of nucleotides displayed on each line",
                        "ctrl": {
                            "python": "value >= 1"
                        },
                        "format": {
                            "python": "(\"\", \" -width=\" + str(value))[value is not None and value!=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_width",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Width of sequence to display (value greater than or equal to 1)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "15",
                        "command": false,
                        "comment": null,
                        "ctrl": {
                            "python": "value >= 0"
                        },
                        "format": {
                            "python": "(\"\", \" -length=\" + str(value))[value is not None and value!=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_length",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Line length of page (0 for indefinite) (value greater than or equal to 0)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "16",
                        "command": false,
                        "comment": null,
                        "ctrl": {
                            "python": "value >= 0"
                        },
                        "format": {
                            "python": "(\"\", \" -margin=\" + str(value))[value is not None and value!=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_margin",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Margin around sequence for numbering. (value greater than or equal to 0)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "17",
                        "command": false,
                        "comment": "Set this to be false if you do not wish to display the ID name of the sequence.",
                        "ctrl": null,
                        "format": {
                            "python": "(\" -noname\", \"\")[ bool(value) ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_name",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Display sequence id",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "18",
                        "command": false,
                        "comment": "Set this to be false if you do not wish to display the description of the sequence.",
                        "ctrl": null,
                        "format": {
                            "python": "(\" -nodescription\", \"\")[ bool(value) ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_description",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Display description",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "19",
                        "command": false,
                        "comment": "Number from which you want the DNA sequence to be numbered.",
                        "ctrl": null,
                        "format": {
                            "python": "(\"\", \" -offset=\" + str(value))[value is not None and value!=vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_offset",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Offset to start numbering the sequence from",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "20",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "python": "(\"\", \" -html\")[ bool(value) ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "e_html",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Use html formatting",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "e_output",
                "precond": null,
                "prompt": "Output section"
            },
            {
                "argpos": "21",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "python": "\" -auto -stdout\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "auto",
                "paramfile": null,
                "precond": null,
                "prompt": "Turn off any prompting",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "sixpack",
    "outputs": {
        "children": [
            {
                "children": [
                    {
                        "comment": null,
                        "filenames": {
                            "python": "e_outfile"
                        },
                        "hidden": false,
                        "main": false,
                        "name": "e_outfile_out",
                        "output_type": "file",
                        "precond": null,
                        "prompt": "outfile_out option",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "SixpackReport",
                                "superclass": "Report"
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "comment": null,
                        "filenames": {
                            "python": "e_outseq"
                        },
                        "hidden": false,
                        "main": false,
                        "name": "e_outseq_out",
                        "output_type": "file",
                        "precond": null,
                        "prompt": "outseq_out option",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [
                                "Protein"
                            ],
                            "card": null,
                            "datatype": {
                                "class": "Sequence",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": [
                                {
                                    "#children": [],
                                    "#tag": "ref",
                                    "@param": "e_osformat_outseq"
                                }
                            ]
                        }
                    }
                ],
                "comment": null,
                "name": "e_output",
                "precond": null,
                "prompt": "Output section"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [],
    "source_links": [],
    "title": "sixpack",
    "type": "program",
    "version": null
}