{
    "authors": null,
    "classifications": [
        {
            "classification": "hmm:database:search",
            "type": "mobyle1"
        },
        {
            "classification": "database:search:hmm",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": "hmmscan"
    },
    "comment": "hmmscan reads sequence(s) from seqfile and compares it against all the HMMs in pfam database looking for significantly similar sequence matches. The output consists of three sections: a ranked list of the best scoring HMMs, a list of the best scoring domains in order of their occurrence in the sequence, and alignments for all the best scoring domains. A sequence score may be higher than a domain score for the same sequence if there is more than one domain in the sequence; the sequence score takes into account all the domains. All sequences scoring above the -E and -T cutoffs are shown in the first list, then every domain found in this list is shown in the second list of domain hits. If desired, E-value and score thresholds may also be applied to the domain list using the --domE and --domT options.",
    "description": "Search sequence(s) against pfam a profile HMM database",
    "documentation_links": [],
    "env": [],
    "homepage_links": [],
    "inputs": {
        "children": [
            {
                "argpos": "3",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" $value\"",
                    "python": "\" \"+str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "seqfile",
                "paramfile": null,
                "precond": null,
                "prompt": "Sequence file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Sequence",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "FASTA"
                    ]
                }
            },
            {
                "argpos": "2",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" $value\"",
                    "python": "\" \"+str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "HMMDB",
                "paramfile": null,
                "precond": null,
                "prompt": "HMM database",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Choice",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "In the per-target output, report target profiles with an E-value of <= value. The\n        default is 10.0, meaning that on average, about 10 false positives will be reported\n        per query, so you can see the top of the 'noise' and decide for yourself if it's really\n        noise.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" -E $value\" : \"\"",
                            "python": "( \"\" , \" -E \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "E_value_cutoff",
                        "paramfile": null,
                        "precond": {
                            "perl": "not defined $Bit_cutoff and $model_specific ne '--cut_ga' and $model_specific ne '--cut_nc'",
                            "python": "Bit_cutoff is None and model_specific != '--cut_ga' and model_specific != '--cut_nc'"
                        },
                        "prompt": "E_value cutoff (-E)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Instead of thresholding per-profile output on E-value, instead report target profiles\n        with a bit score of >= value.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \" -T $value\" : \"\"",
                            "python": "( \"\" , \" -T \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "Bit_cutoff",
                        "paramfile": null,
                        "precond": {
                            "perl": "$E_value_cutoff == 10.0 and $model_specific ne '--cut_ga' and $model_specific ne '--cut_nc'",
                            "python": "E_value_cutoff == 10.0 and model_specific != '--cut_ga' and model_specific != '--cut_nc'"
                        },
                        "prompt": "Bit score cutoff (-T)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "In the per-domain output, for target profiles that have already satisfied the perprofile\n            reporting threshold, report individual domains with a conditional E-value\n            of <= value. The default is 10.0. A 'conditional' E-value means the expected\n            number of additional false positive domains in the smaller search space of those\n            comparisons that already satisfied the per-profile reporting threshold (and thus\n            must have at least one homologous domain already).",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" --domE $value\" : \"\"",
                            "python": "( \"\" , \" --domE \" + str(value) )[ value is not None and value !=vdef ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "domE",
                        "paramfile": null,
                        "precond": {
                            "perl": "not defined $domT and $model_specific ne '--cut_ga' and $model_specific ne '--cut_nc'",
                            "python": "domT is None and model_specific != '--cut_ga' and model_specific != '--cut_nc'"
                        },
                        "prompt": "E-value cutoff for the per-domain ranked hit list (--domE)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Instead of thresholding per-domain output on E-value, instead report domains with\n              a bit score of >= value.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --domT $value\" : \"\"",
                            "python": "( \"\" , \" --domT \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "domT",
                        "paramfile": null,
                        "precond": {
                            "perl": "$domE == 10.0 and $model_specific ne '--cut_ga' and $model_specific ne '--cut_nc'",
                            "python": "domE == 10.0 and model_specific != '--cut_ga' and model_specific != '--cut_nc'"
                        },
                        "prompt": "Bit score cutoff for the per-domain ranked hit list  (--domT)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "children": [
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Use an E-value of <= value as the per-target inclusion threshold. The default is\n              0.01, meaning that on average, about 1 false positive would be expected in every\n              100 searches with different query sequences.",
                                "ctrl": null,
                                "format": {
                                    "perl": "(defined $value and value != vdef) ? \" --incE $value\" : \"\"",
                                    "python": "( \"\" , \" --incE \" + str(value) )[ value is not None and value != vdef]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "incE",
                                "paramfile": null,
                                "precond": {
                                    "perl": "not defined $incT and $model_specific ne '--cut_ga'",
                                    "python": "incT is None and model_specific != '--cut_ga'"
                                },
                                "prompt": "Include sequences lower than this E-value threshold (--incE)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Use a conditional E-value of <= value as the per-domain inclusion threshold, in\n              targets that have already satisfied the overall per-target inclusion threshold. The\n              default is 0.01.",
                                "ctrl": null,
                                "format": {
                                    "perl": "(defined $value and value != vdef) ? \" --incdomE $value\" : \"\"",
                                    "python": "( \"\" , \" --incdomE \" + str(value) )[ value is not None and value != vdef]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "incdomE",
                                "paramfile": null,
                                "precond": {
                                    "perl": "defined $incdomT and not defined model_specific",
                                    "python": "incdomT is not None and model_specific is None"
                                },
                                "prompt": "Include domains lower than this E-value threshold  (--incdomE)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Instead of using E-values for setting the inclusion threshold, instead use a bit score\n                of >= the value as the per-target inclusion threshold. It would be unusual to use bit\n                score thresholds with hmmscan, because you don't expect a single score threshold\n                to work for different profiles; different profiles have slightly different expected score\n                distributions.",
                                "ctrl": null,
                                "format": {
                                    "perl": "(defined $value) ? \" --incT $value\" : \"\"",
                                    "python": "( \"\" , \" --incT \" + str(value) )[ value is not None ]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "incT",
                                "paramfile": null,
                                "precond": {
                                    "perl": "$incE == 0.01 and $model_specific ne '--cut_ga'",
                                    "python": "incE == 0.01 and model_specific != '--cut_ga'"
                                },
                                "prompt": "Include sequences upper than this score threshold  (--incT)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Instead of using E-values, instead use a bit score of >= value as the per-domain\n                inclusion threshold. As with --incT above, it would be unusual to use a single bit\n                score threshold in hmmscan.",
                                "ctrl": null,
                                "format": {
                                    "perl": "(defined $value) ? \" --incdomT $value\" : \"\"",
                                    "python": "( \"\" , \" --incdomT \" + str(value) )[ value is not None ]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "incdomT",
                                "paramfile": null,
                                "precond": {
                                    "perl": "$incdomE == 0.01 and not defined $model_specific",
                                    "python": "incdomE == 0.01 and model_specific is None"
                                },
                                "prompt": "Include domans upper than this score threshold  (--incdomT)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            }
                        ],
                        "comment": "'Inclusion' thresholds are stricter than reporting thresholds. Inclusion thresholds \n            control which hits are considered to be reliable enough to be included in an output alignment or a \n            subsequent search round. In hmmscan, which does not have any alignment output  nor any iterative\n            search steps, inclusion thresholds have little effect. They only affect what domains get\n            marked as significant ('!') or questionable ('?') in domain output.",
                        "name": "thresholds_inclusion",
                        "precond": null,
                        "prompt": "Options controlling inclusion (significance) thresholds."
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Curated profile databases may define specific bit score thresholds for each profile, superseding any thresholding\n            based on statistical significance alone. To use these options, the profile must contain the appropriate\n            (GA, TC, and/or NC) optional score threshold annotation; this is picked up by hmmbuild from Stockholm\n            format alignment files. Each thresholding option has two scores: the per-sequence threshold x1 value and the\n            per-domain threshold x2 value. These act as if -T x1 --incT x1 --domT x2 --incdomT x2 has been\n            applied specifically using each model's curated thresholds.cut ga: Use the GA (gathering) bit scores in the model to set per-sequence (GA1) and\n            per-domain (GA2) reporting and inclusion thresholds. GA thresholds are generally\n            considered to be the reliable curated thresholds defining family membership; for\n            example, in Pfam, these thresholds define what gets included in Pfam Full alignments\n            based on searches with Pfam Seed models.cut_nc: Use the NC (noise cutoff) bit score thresholds in the model to set per-sequence\n            (NC1) and per-domain (NC2) reporting and inclusion thresholds. NC thresholds\n            are generally considered to be the score of the highest-scoring known false positive.cut_tc: Use the NC (trusted cutoff) bit score thresholds in the model to set per-sequence\n            (TC1) and per-domain (TC2) reporting and inclusion thresholds. TC thresholds are\n            generally considered to be the score of the lowest-scoring known true positive that\n            is above all known false positives.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value ne $vdef) ? \" $value\" : \"\"",
                            "python": "( \"\" , \" \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "model_specific",
                        "paramfile": null,
                        "precond": {
                            "perl": "not defined $Bit_cutoff and not $E_value_cutoff == 10.0 and not defined $incdomT and  $incdomE == 0.01",
                            "python": "not Bit_cutoff and E_value_cutoff == 10.0 and incdomT is None and incdomE == 0.01"
                        },
                        "prompt": "Options for model-specific thresholding",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "thresholds_report",
                "precond": null,
                "prompt": "Options for reporting thresholds"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Turn off all filters, including the bias filter, and run full Forward/Backward postprocessing\n              on every target. This increases sensitivity somewhat, at a large cost in speed.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" --max\" : \"\"",
                            "python": "( \"\" , \" --max \" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "max",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Turn all heuristic filters off (less speed, more power) (--max)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Set the P-value threshold for the MSV filter step. The default is 0.02, meaning that\n            roughly 2% of the highest scoring nonhomologous targets are expected to pass the filter.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef ) ? \" --F1 $value\" : \"\"",
                            "python": "( \"\" , \" --F1 \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "F1",
                        "paramfile": null,
                        "precond": {
                            "perl": "not max",
                            "python": "not max"
                        },
                        "prompt": "Stage 1 (MSV) threshold",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Set the P-value threshold for the Viterbi filter step. The default is 0.001.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef ) ? \" --F2 $value\" : \"\"",
                            "python": "( \"\" , \" --F2 \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "F2",
                        "paramfile": null,
                        "precond": {
                            "perl": "not max",
                            "python": "not max"
                        },
                        "prompt": "Stage 1 (Vit) threshold",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Set the P-value threshold for the Forward filter step. The default is 1e-5.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef ) ? \" --F3 $value\" : \"\"",
                            "python": "( \"\" , \" --F3 \" + str(value) )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "F3",
                        "paramfile": null,
                        "precond": {
                            "perl": "not max",
                            "python": "not max"
                        },
                        "prompt": "Stage 1 (Fwd) threshold",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Turn off the bias filter. This increases sensitivity somewhat, but can come at a\n            high cost in speed, especially if the query has biased residue composition (such\n            as a repetitive sequence region, or if it is a membrane protein with large regions\n            of hydrophobicity). Without the bias filter, too many sequences may pass the filter\n            with biased queries, leading to slower than expected performance as the computationally\n            intensive Forward/Backward algorithms shoulder an abnormally heavy\n            load.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" --nobias\" : \"\"",
                            "python": "( \"\" , \" --nobias \" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "nobias",
                        "paramfile": null,
                        "precond": {
                            "perl": "not max",
                            "python": "not max"
                        },
                        "prompt": "Turn off composition bias filter (--nobias)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": "HMMER3 searches are accelerated in a three-step filter pipeline: the MSV filter, the Viterbi filter, and\n            the Forward filter. The first filter is the fastest and most approximate; the last is the full Forward scoring\n            algorithm. There is also a 'bias filter' step between MSV and Viterbi. Targets that pass all the steps\n            in the acceleration pipeline are then subjected to 'postprocessing' -- domain identification and scoring\n            using the Forward/Backward algorithm. Changing filter thresholds only removes or includes targets from\n            consideration; changing filter thresholds does not alter bit scores, E-values, or alignments, all of which are\n            determined solely in 'postprocessing'.",
                "name": "acceleration",
                "precond": null,
                "prompt": "Options controlling acceleration heuristics"
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Turn off the 'null2' score corrections for biased composition.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" --nonull2\" : \"\"",
                            "python": "( \"\" , \" --nonull2 \" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "nonull2",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Turn off biased composition score corrections (--nonull2)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Assert that the total number of targets in your searches is the value, for the purposes of\n          per-sequence E-value calculations, rather than the actual number of targets seen.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" -Z $value\" : \"\"",
                            "python": "( \"\" , \" -Z \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "E_value_calculation",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Control of E_value calculation (-Z)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Assert that the total number of targets in your searches is the value, for the purposes\n          of per-domain conditional E-value calculations, rather than the number of targets\n          that passed the reporting thresholds.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --domZ $value\" : \"\"",
                            "python": "( \"\" , \" --domZ \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "domZ",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Set Z score of significant sequences, for domain E-value calculation  (--domZ)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Set the random number seed to value. Some steps in postprocessing require Monte\n               Carlo simulation. The default is to use a fixed seed (42), so that results are exactly\n               reproducible. Any other positive integer will give different (but also reproducible)\n               results. A choice of 0 uses a 'randomly chosen' seed.",
                        "ctrl": {
                            "perl": "0 <= $value",
                            "python": "0 <= value"
                        },
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" --seed $value \" : \"\"",
                            "python": "( \"\" , \" --seed \" + str(value) )[ value is not None and value !=vdef ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "seed",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Set RNG seed number (--seed)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "expert",
                "precond": null,
                "prompt": "Other expert options"
            },
            {
                "children": [
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value ) ? \" -o $value\" : \"\"",
                            "python": "( \" \" , \" -o \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "outfile_name",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Name of the sequence(s) file (-o)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Filename",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Save a simple tabular (space-delimited) file summarizing the 'per-target' output,\n        with one data line per homologous target model found",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --tblout $value\" : \"\"",
                            "python": "( \"\" , \" --tblout \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "perseqfile_name",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "File name of parseable table of per-sequence hits (--tblout)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Filename",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "1",
                        "command": false,
                        "comment": "Save a simple tabular (space-delimited) file summarizing the 'per-domain' output,\n          with one data line per homologous domain detected in a query sequence for each\n          homologous model.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --domtblout $value\" : \"\"",
                            "python": "( \"\" , \" --domtblout \" + str(value) )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "perdomfile_name",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "File name of parseable table of per-domain hits (--domtblout)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Filename",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Use accessions instead of names in the main output, where available for profiles\n        and/or sequences",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" --acc \" : \"\"",
                            "python": "( \"\" , \" --acc \" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "acc",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Prefer accessions over names in output",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Omit the alignment section from the main output. This can greatly reduce the\n        output volume.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" --noali \" : \"\"",
                            "python": "( \"\" , \" --noali \" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "noali",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Don't output alignments, so output is smaller",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Unlimit the length of each line in the main output. The default is a limit of 120\n                characters per line, which helps in displaying the output cleanly on terminals and\n                in editors, but can truncate target profile description lines.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \" --notextw \" : \"\"",
                            "python": "( \"\" , \" --notextw \" )[ value ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "notextw",
                        "paramfile": null,
                        "precond": {
                            "perl": "textw == 120",
                            "python": "textw == 120"
                        },
                        "prompt": "Unlimit ASCII text output line width (--notextw)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Set the main output's line length limit to value> characters per line. The default is\n         120.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef) ? \" --textw $value \" : \"\"",
                            "python": "( \"\" , \" --textw \" + str(value) )[ value is not None and value !=vdef ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "textw",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Set max width of ASCII text output lines (--textw)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "controlOutput",
                "precond": null,
                "prompt": "Options controlling output"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "hmmscan",
    "outputs": {
        "children": [
            {
                "children": [
                    {
                        "comment": null,
                        "filenames": {
                            "perl": "$outfile_name",
                            "python": "str(outfile_name)"
                        },
                        "hidden": false,
                        "main": false,
                        "name": "output_file_name",
                        "output_type": "file",
                        "precond": {
                            "perl": "defined $outfile_name",
                            "python": "outfile_name is not None"
                        },
                        "prompt": "Output file",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Text",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "comment": null,
                        "filenames": {
                            "perl": "$perseqfile_name",
                            "python": "str(perseqfile_name)"
                        },
                        "hidden": false,
                        "main": false,
                        "name": "output_perseqfile_name",
                        "output_type": "file",
                        "precond": {
                            "perl": "$perseqfile_name",
                            "python": "perseqfile_name"
                        },
                        "prompt": "Output parseable table of per-sequence hits",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Text",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "comment": null,
                        "filenames": {
                            "perl": "$perdomfile_name",
                            "python": "str(perdomfile_name)"
                        },
                        "hidden": false,
                        "main": false,
                        "name": "output_perdomfile_name",
                        "output_type": "file",
                        "precond": {
                            "perl": "$perdomfile_name",
                            "python": "perdomfile_name"
                        },
                        "prompt": "Output parseable table of per-domain hits",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Text",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "controlOutput",
                "precond": null,
                "prompt": "Options controlling output"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [],
    "source_links": [],
    "title": "HMMSCAN",
    "type": "program",
    "version": null
}