{
    "authors": "G. Kucherov",
    "classifications": [
        {
            "classification": "sequence:nucleic:repeats",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": "mreps"
    },
    "comment": null,
    "description": "Algorithm for finding tandem repeats in DNA sequences",
    "documentation_links": [
        "http://bioinfo.lifl.fr/mreps/"
    ],
    "env": [],
    "homepage_links": [
        "http://bioinfo.lifl.fr/mreps/"
    ],
    "inputs": {
        "children": [
            {
                "argpos": "20",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" -fasta $value\"",
                    "python": "\" -fasta \"+str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "query",
                "paramfile": null,
                "precond": null,
                "prompt": "Query Sequence file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [
                        "DNA"
                    ],
                    "card": null,
                    "datatype": {
                        "class": "Sequence",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "FASTA"
                    ]
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Integer value",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value ) ? \" -res $value\" : \"\"",
                    "python": "( \"\" , \" -res \" + str(value) )[ value is not None]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "err",
                "paramfile": null,
                "precond": null,
                "prompt": "Specifies the resolution (-res)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Integer value",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" -from $value\" : \"\"",
                    "python": "( \"\" , \" -from \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "from_v",
                "paramfile": null,
                "precond": null,
                "prompt": "Specifies starting position (-from)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Integer value",
                "ctrl": {
                    "perl": "$value >= $from_v",
                    "python": "value >= from_v"
                },
                "format": {
                    "perl": "(defined $value) ? \" -to $value\" : \"\"",
                    "python": "( \"\" , \" -to \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "to",
                "paramfile": null,
                "precond": null,
                "prompt": "Specifies end position (-to)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Integer value",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" -win $value\" : \"\"",
                    "python": "( \"\" , \" -win \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "win",
                "paramfile": null,
                "precond": null,
                "prompt": "Processes by sliding windows of size 2*n overlaping by n (-win)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Integer value",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" -minsize $value\" : \"\"",
                    "python": "( \"\" , \" -minsize \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "minsize",
                "paramfile": null,
                "precond": null,
                "prompt": "Report repetitions whose size is at least n (-minsize)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Integer value",
                "ctrl": {
                    "perl": "$value >= $minsize",
                    "python": "value >= minsize"
                },
                "format": {
                    "perl": "(defined $value) ? \" -maxsize $value\" : \"\"",
                    "python": "( \"\" , \" -maxsize \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "maxsize",
                "paramfile": null,
                "precond": null,
                "prompt": "Report repetitions whose size is at most n (-maxsize)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Integer value",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" -minperiod $value\" : \"\"",
                    "python": "( \"\" , \" -minperiod \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "minperiod",
                "paramfile": null,
                "precond": null,
                "prompt": "Report repetitions whose period is at least n (-minperiod)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Integer value",
                "ctrl": {
                    "perl": "$value >= $minperiod",
                    "python": "value >= minperiod"
                },
                "format": {
                    "perl": "(defined $value) ? \" -maxperiod $value\" : \"\"",
                    "python": "( \"\" , \" -maxperiod \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "maxperiod",
                "paramfile": null,
                "precond": null,
                "prompt": "Report repetitions whose period is at most n (-maxperiod)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": "Float value greater tha 1.0",
                "ctrl": {
                    "perl": "$value >= 1.0",
                    "python": "value >= 1.0"
                },
                "format": {
                    "perl": "(defined $value) ? \" -exp $value\" : \"\"",
                    "python": "( \"\" , \" -exp \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "exp",
                "paramfile": null,
                "precond": null,
                "prompt": "Report repetitions whose exponent is at least n (-exp)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Float",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "( $value) ? \" -allowsmall\" : \"\"",
                    "python": "( \"\" , \" -allowsmall\" )[ value ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "allowsmall",
                "paramfile": null,
                "precond": null,
                "prompt": "Output small repeats that can occur randomly (-allowsmall)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Boolean",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "( $value) ? \" -noprint\" : \"\"",
                    "python": "( \"\" , \" -noprint\" )[ value ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "noprint",
                "paramfile": null,
                "precond": null,
                "prompt": "Do not output repetitions sequences (-noprint)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Boolean",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "10",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" -xmloutput $value\" : \"\"",
                    "python": "( \"\" , \" -xmloutput \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "xml",
                "paramfile": null,
                "precond": null,
                "prompt": "XML format output file name (-xmloutput)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Filename",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "mreps",
    "outputs": {
        "children": [
            {
                "comment": null,
                "filenames": {
                    "perl": "$xml",
                    "python": "str(xml)"
                },
                "hidden": false,
                "main": false,
                "name": "xmlout",
                "output_type": "file",
                "precond": {
                    "perl": "$xml",
                    "python": "xml is not None"
                },
                "prompt": "XML output file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "MrepsXmlReport",
                        "superclass": "Report"
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [
        {
            "doi": null,
            "label": "R. Kolpakov, G. Kucherov, Finding maximal repetitions in a word in linear time, 1999 Symposium on Foundations of Computer Science (FOCS), New-York (USA), pp. 596-604, IEEE Computer Society",
            "url": null
        },
        {
            "doi": null,
            "label": "R. Kolpakov, G. Kucherov, Finding Approximate Repetitions under Hamming Distance, 9-th European Symposium on Algorithms (ESA), Aarhus (Denmark), Lecture Notes in Computer Science, vol. 2161, pp 170-181.",
            "url": null
        }
    ],
    "source_links": [
        "http://bioinfo.lifl.fr/mreps/"
    ],
    "title": "mreps",
    "type": "program",
    "version": "2.5"
}