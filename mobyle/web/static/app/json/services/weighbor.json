{
    "authors": "Bruno, Halpern, Socci",
    "classifications": [
        {
            "classification": "phylogeny:distance",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": "weighbor"
    },
    "comment": "Weighbor takes an input file of pairwise distances in Phylip format and computes the phylogentic tree that best\n       corresponds to those distances.",
    "description": "Weighted neighbor joining",
    "documentation_links": [],
    "env": [],
    "homepage_links": [
        "http://www.is.titech.ac.jp/~shimo/prog/consel/"
    ],
    "inputs": {
        "children": [
            {
                "argpos": "1",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" -i $value\"",
                    "python": "\" -i \" + str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "infile",
                "paramfile": null,
                "precond": null,
                "prompt": "Distances matrix File (-i)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "PhylipDistanceMatrix",
                        "superclass": "AbstractText"
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "2",
                "command": false,
                "comment": "Default is 500. This is the effective sequence length equal to the number of varying sites. Note if the -L option is not used then the program will print a warning message to stderr indicating that it is using this default length.",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" -L $value\" : \"\"",
                    "python": "( \"\" , \" -L \" + str(value) )[ value is not None ]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "Length",
                "paramfile": null,
                "precond": null,
                "prompt": "Length of the sequences (-L)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "2",
                "command": false,
                "comment": "Sets the size of the alphabet of characters (number of bases) b. 1/b is equal to the probability that there will be a match for infinite evolution time. The default value for b is 4.",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value and $value != $vdef) ? \" -b $value\" : \"\"",
                    "python": "( \"\" , \" -b \" + str(value) )[ value is not None and value != vdef]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "size",
                "paramfile": null,
                "precond": null,
                "prompt": "Size of the alphabet (-b)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "2",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "(defined $value and $value ne $vdef) ? \" $value\" : \"\"",
                    "python": "( \"\" , \" \" + str(value) )[ value is not None and value != vdef]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "verbose",
                "paramfile": null,
                "precond": null,
                "prompt": "Verbose output (-v)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Choice",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "3",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" -o weighbor.treefile\"",
                    "python": "\" -o weighbor.treefile\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "outfile",
                "paramfile": null,
                "precond": null,
                "prompt": "Output file (-o)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "weighbor",
    "outputs": {
        "children": [
            {
                "comment": null,
                "filenames": {
                    "perl": "\"weighbor.treefile\"",
                    "python": "\"weighbor.treefile\""
                },
                "hidden": false,
                "main": false,
                "name": "treefile",
                "output_type": "file",
                "precond": null,
                "prompt": "Tree output file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Tree",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "NEWICK"
                    ]
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [
        {
            "doi": null,
            "label": "W. J. Bruno, N. D. Socci, and A. L. Halpern. Weighted Neighbor Joining: A Likelihood-Based Approach to Distance-Based Phylogeny Reconstruction, Mol. Biol. Evol. 17 (1): 189-197 (2000).",
            "url": null
        }
    ],
    "source_links": [
        "http://www.is.titech.ac.jp/~shimo/prog/consel/"
    ],
    "title": "Weighbor",
    "type": "program",
    "version": "1.2.1"
}