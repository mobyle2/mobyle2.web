{
    "authors": null,
    "classifications": [
        {
            "classification": "genetics:detection",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": "scan_region.pl"
    },
    "comment": null,
    "description": "Scan genomic regions in a query-file against a DB-file which contains\n        chromosome locations for various genomics features",
    "documentation_links": [],
    "env": [],
    "homepage_links": [],
    "inputs": {
        "children": [
            {
                "argpos": "1",
                "command": false,
                "comment": "A file containing CNV calls, that could be generated by the\n                test operation of detect_cnv program.",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" $value \" : \"\"",
                    "python": "( \"\" , \" \" + str(value) )[ value is not None]"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "cnvfile",
                "paramfile": null,
                "precond": null,
                "prompt": "CNV calls file (cnv)",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Cnv",
                        "superclass": "AbstractText"
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "2",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \"",
                    "python": "( \"\" , \""
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "reffile",
                "paramfile": null,
                "precond": null,
                "prompt": "Reference genes for CNV calls generated using hg18 (Mar 2006, NCBI build 36) human genome assembly",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Choice",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "3",
                "command": false,
                "comment": "--refgene:  specify that the database file is in refGene format from UCSC genome\n               browser.--refcds:  specify that the database file is in refGene format from UCSC genome\n               browser, but user is only interested in the overlap of coding\n               region (first exon to last exon).--refexon:   specify that the database file is in refGene format from UCSC genome\n               browser, but user is only interested in the overlap of query\n               with exons.--knowngene:  specify that the database file is in knownGene format from UCSC\n               genome browser.",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value and $value ne $vdef) ? \" $value \" : \"\"",
                    "python": "( \"\" , \" \" + str(value) )[ value is not None  and value !=vdef]"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "reference",
                "paramfile": null,
                "precond": null,
                "prompt": "Flags specifying type of databases",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Choice",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "children": [
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "This argument is used in conjunction with the --refgene argument,\n         to specify that the alternative gene symbol in the\n               \"name2\" field in the refGene file be printed in the output.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"--name2  \" : \"\"",
                            "python": "( \"\" , \" --name2  \" )[ value]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "name2",
                        "paramfile": null,
                        "precond": {
                            "perl": "$reference eq '--refgene'",
                            "python": "reference == '--refgene'"
                        },
                        "prompt": "Use name2 annotation in refGene file in output",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Specify a cross-reference file for the RefGene track in UCSC\n               genome browser, so that in the output, the gene identifier\n               (gene name or refseq id) are replaced by the gene symbol specified\n                in the link file. (If not found in the reflink file, the\n               gene identifiers are still used).",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"--reflink",
                            "python": "( \"\" , \" --reflink"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "reflink",
                        "paramfile": null,
                        "precond": {
                            "perl": "$reference ne '--knowngene'",
                            "python": "reference != '--knowngene'"
                        },
                        "prompt": "Specify a cross-reference file for the RefGene track in UCSC genome browser",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Specify a cross-reference file for the knownGene track in UCSC\n               genome browser, so that in the output, the gene identifier\n               (gene name or refseq id) are replaced by the gene symbol specified\n                in the kgxref file. (If not found in the kgxref file, the\n               gene identifiers are still used).",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"--kgxref",
                            "python": "( \"\" , \" --kgxref"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "kgxref",
                        "paramfile": null,
                        "precond": {
                            "perl": "$reference eq '--knowngene'",
                            "python": "reference == '--knowngene'"
                        },
                        "prompt": "Specify a cross-reference file for the knownGene track in UCSC  genome browser",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "dbfile-specific",
                "precond": null,
                "prompt": "Database-specific arguments"
            },
            {
                "children": [
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Condense overlapped regions in the query file into non-over-lapped\n         regions. When this argument is set, the annotation for\n               each query (the strings after the chromosome location in each\n               line of the query file) will not in the output.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"--condense_query \" : \"\"",
                            "python": "( \"\" , \" --condense_query \" )[ value]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "condense_query",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Condense and eliminate overlapping regions in query",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Specify the score threshold in the database file to include in the\n               search for overlaps. This argument is file format dependent.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --score_threshold $value \" : \"\"",
                            "python": "( \"\" , \" --score_threshold \" + str(value) )[ value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "score_threshold",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Score threshold for database in UCSC annotation file",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Specify the normalized score threshold in the database file to\n               include in the search for overlaps. This argument is file format dependent.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --normscore_threshold $value \" : \"\"",
                            "python": "( \"\" , \" --normscore_threshold \" + str(value) )[ value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "normscore_threshold",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Normalized score threshold for database in UCSC annotation file",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "query-db-match",
                "precond": null,
                "prompt": "Criteria for defining query-db match"
            },
            {
                "children": [
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Expand the query region on the left side (5 megabases in forward strand,\n               3 megabases in reverse strand) to find overlap (used in conjunction with\n               --refgene or --knowngene argument).",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --expandleft $value \" : \"\"",
                            "python": "( \"\" , \" --expandleft \" + str(value) )[ value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "expandleft",
                        "paramfile": null,
                        "precond": {
                            "perl": "($reference eq '--knowngene' or $reference eq '--refgene') and (not $expandmax)",
                            "python": "(reference == '--knowngene' or reference == '--refgene') and (not expandmax)"
                        },
                        "prompt": "Expand left side of query regions (overwrite --expandmax)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Expand the query region on the right side (3 megabases in forward\n               strand, 5 megabases in reverse strand) to find overlap (used in conjunction\n                with --refgene or --knowngene argument).",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --expandright $value \" : \"\"",
                            "python": "( \"\" , \" --expandright \" + str(value) )[ value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "expandright",
                        "paramfile": null,
                        "precond": {
                            "perl": "($reference eq '--knowngene' or $reference eq '--refgene') and (not $expandmax)",
                            "python": "(reference == '--knowngene' or reference == '--refgene') and (not expandmax)"
                        },
                        "prompt": "Expand right side of query regions (overwrite --expandmax)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Maximum expansion size of the query region on both side to find\n               at least one overlap (used in junction with --refgene or\n               --knowngene argument). After query expansion, only the closet\n               gene will be printed; other genes, even if overlapping with the\n               query after expansion, will not be printed.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value) ? \" --expandmax $value \" : \"\"",
                            "python": "( \"\" , \" --expandmax \" + str(value) )[ value is not None]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "expandmax",
                        "paramfile": null,
                        "precond": {
                            "perl": "$reference eq '--knowngene' or $reference eq '--refgene'",
                            "python": "reference == '--knowngene' or reference == '--refgene'"
                        },
                        "prompt": "Size of maximum expansion for query region to find overlap",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "expansion_query",
                "precond": null,
                "prompt": "Expansion of query to find match"
            },
            {
                "argpos": "3",
                "command": false,
                "comment": "Expand the chromosome region specified in the database-file to find\n               overlap with the query regions.",
                "ctrl": null,
                "format": {
                    "perl": "(defined $value) ? \" --expanddb $value \" : \"\"",
                    "python": "( \"\" , \" --expanddb \" + str(value) )[ value is not None]"
                },
                "hidden": false,
                "main": false,
                "mandatory": false,
                "name": "expanddb",
                "paramfile": null,
                "precond": null,
                "prompt": "Expand definition of gene/cds/exon at both sides",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Integer",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "children": [
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Instead of printing the query region, only print the overlapped\n               portion of the query region and template region.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"--overlap \" : \"\"",
                            "python": "( \"\" , \" --overlap \" )[ value]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "overlap",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Print overlapped portion of region only",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Print the region in database file, rather than query file, when an\n               overlapped hit is found.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"--dbregion \" : \"\"",
                            "python": "( \"\" , \" --dbregion \" )[ value]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "dbregion",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Print database region (default is to print query region)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": "Append the score and normscore for the overlapped template\n               region to the output for database files downloaded as UCSC tables.",
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"--append \" : \"\"",
                            "python": "( \"\" , \" --append \" )[ value]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "append",
                        "paramfile": null,
                        "precond": null,
                        "prompt": "Append extra information from annotation file to output",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "3",
                        "command": false,
                        "comment": null,
                        "ctrl": null,
                        "format": {
                            "perl": "($value) ? \"--queryinfo \" : \"\"",
                            "python": "( \"\" , \" --queryinfo \" )[ value]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "queryinfo",
                        "paramfile": null,
                        "precond": {
                            "perl": "$dbregion",
                            "python": "dbregion"
                        },
                        "prompt": "Force to print query info when Print database region is used",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Boolean",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "output_option",
                "precond": null,
                "prompt": "Input/output options"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "scan_region",
    "outputs": {
        "children": [
            {
                "comment": null,
                "filenames": {
                    "perl": "\"scan_region.out\"",
                    "python": "\"scan_region.out\""
                },
                "hidden": false,
                "main": false,
                "name": "output_file",
                "output_type": "stdout",
                "precond": null,
                "prompt": "Output file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Cnv",
                        "superclass": "AbstractText"
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [],
    "source_links": [],
    "title": "scan_region",
    "type": "program",
    "version": null
}