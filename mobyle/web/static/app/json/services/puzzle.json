{
    "authors": "Heiko A. Schmidt, Korbinian Strimmer and Arndt von Haeseler",
    "classifications": [
        {
            "classification": "phylogeny:likelihood",
            "type": "mobyle1"
        }
    ],
    "command": {
        "path": null,
        "value": "puzzle"
    },
    "comment": null,
    "description": "Maximum likelihood analysis for nucleotide, amino-acid and two state data",
    "documentation_links": [
        "http://bioweb2.pasteur.fr/docs/puzzle/tree-puzzle.pdf"
    ],
    "env": [],
    "homepage_links": [
        "http://www.tree-puzzle.de/"
    ],
    "inputs": {
        "children": [
            {
                "argpos": "2",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" < puzzle.params\"",
                    "python": "\" < puzzle.params\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "stdinput",
                "paramfile": null,
                "precond": null,
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "1000",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\"y\\\\n\"",
                    "python": "\"y\\n\""
                },
                "hidden": true,
                "main": false,
                "mandatory": false,
                "name": "confirm",
                "paramfile": "puzzle.params",
                "precond": null,
                "prompt": null,
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "String",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "argpos": "1",
                "command": false,
                "comment": null,
                "ctrl": null,
                "format": {
                    "perl": "\" $infile\"",
                    "python": "\" \" + str(value)"
                },
                "hidden": false,
                "main": false,
                "mandatory": true,
                "name": "infile",
                "paramfile": null,
                "precond": null,
                "prompt": "Alignment File",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Alignment",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "PHYLIPI"
                    ]
                }
            },
            {
                "children": [
                    {
                        "argpos": null,
                        "command": false,
                        "comment": "Allows to switch between tree reconstruction/analysis by maximum likelihood and likelihood mapping.",
                        "ctrl": null,
                        "format": null,
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "analysis_type",
                        "paramfile": "puzzle.params",
                        "precond": null,
                        "prompt": "Type of analysis? (b)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "children": [
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Determines whether an approximate or the exact likelihood function is used to estimate parameters of the models of sequence evolution. The approximate likelihood function is in most cases sufficient and is faster.",
                                "ctrl": null,
                                "format": null,
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "parameter_estimates",
                                "paramfile": "puzzle.params",
                                "precond": null,
                                "prompt": "Parameter estimates? (e)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Choice",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Selects the methods used in the estimation of the model parameters. Neighbor-joining tree means that a NJ tree is used to estimate the parameters. Quartet sampling means that a number of random sets of four sequences are selected to estimate parameters.",
                                "ctrl": null,
                                "format": null,
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "parameter_estimation",
                                "paramfile": "puzzle.params",
                                "precond": null,
                                "prompt": "Parameter estimation uses? (x)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Choice",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            }
                        ],
                        "comment": null,
                        "name": "both_options",
                        "precond": null,
                        "prompt": "Both Tree reconstruction and Likelihood mapping options"
                    },
                    {
                        "children": [
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "If tree reconstruction is selected: number of puzzling steps. Parameter of the quartet puzzling tree search. Generally, the more sequences are used the more puzzling steps are advised. The default value varies depending on the number of sequences (at least 1000).If likelihood mapping is selected: number of qua rtets in a likelihood mapping analysis. Equal to the number of dots in the likelihood mapping diagram. By default 10000 dots/quartets are assumed. To use all possible quartets in clustered likelihood mapping you have to specify a value of n=0.",
                                "ctrl": null,
                                "format": {
                                    "perl": "(defined $value and $value != $vdef)? \"n\\\\n$value\\\\n\" : \"\"",
                                    "python": "( \"\" , \"n\\n\" + str(value) + \"\\n\" )[ value is not None and value != vdef]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "quartet",
                                "paramfile": "puzzle.params",
                                "precond": null,
                                "prompt": "Number of quartets? (n)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Integer",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            }
                        ],
                        "comment": null,
                        "name": "likelihood_options",
                        "precond": {
                            "perl": "$analysis_type eq \"2\"",
                            "python": "analysis_type == \"2\""
                        },
                        "prompt": "Likelihood mapping options"
                    },
                    {
                        "children": [
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Determines how the overall tree is obtained. The topology is either computed with the quartet puzzling algorithm or a set of trees is provided by the user. If there are more than two trees in such a set, maximum likelihood branch lengths will be computed for this tree and a number of tests (KH-test, SH-test, and ELW) will be performed on the trees by default. Instead of the evaluation a consensus can be computed for all the trees for which ML branch lengths and ML value are estimated. Alternatively, a maximum likelihood distance matrix only can also be computed (no overall tree).",
                                "ctrl": null,
                                "format": null,
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "tree_search",
                                "paramfile": "puzzle.params",
                                "precond": null,
                                "prompt": "Tree search procedure? (k)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Choice",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": "2000",
                                "command": false,
                                "comment": null,
                                "ctrl": null,
                                "format": {
                                    "perl": "(defined $value)? \"$tree_file\\\\n\" : \"\"",
                                    "python": "( \"\" , str(value) +\"\\n\" )[ value is not None ]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": true,
                                "name": "tree_file",
                                "paramfile": "puzzle.params",
                                "precond": {
                                    "perl": "$tree_search eq \"3\" or  $tree_search eq \"2\"",
                                    "python": "tree_search == \"3\" or tree_search == \"2\""
                                },
                                "prompt": "User Tree file",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Tree",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Computation of clock-like maximum likelihood branch lengths. This option also invokes the likelihood ratio clock test.",
                                "ctrl": null,
                                "format": {
                                    "perl": "($value)? \"z\\\\n\" : \"\"",
                                    "python": "( \"\" , \"z\\n\" )[ value ]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "clocklike",
                                "paramfile": "puzzle.params",
                                "precond": {
                                    "perl": "$tree_search ne \"4\"",
                                    "python": "tree_search != \"4\""
                                },
                                "prompt": "Compute clocklike branch lengths? (z)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Boolean",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "Location of root. Only for computation of clock-like maximum likelihood branch lengths. Allows to specify the branch where the root should be placed in an unrooted tree topology. For example, in the tree (a,b,(c,d)) l = 1 places the root at the branch leading to sequence a whereas l=5 places the root at the internal branch.",
                                "ctrl": null,
                                "format": {
                                    "perl": "(defined $value)? \"l\\\\n$value\\\\n\" : \"\"",
                                    "python": "( \"\" , \"l\\n\" + str(value) + \"\\n\" )[ value is not None]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "invalid",
                                "paramfile": "puzzle.params",
                                "precond": {
                                    "perl": "$tree_search ne \"4\" and $clocklike",
                                    "python": "tree_search != \"4\" and clocklike"
                                },
                                "prompt": "Enter an invalid branch number to search for the best location despite of automatic search (l)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Integer",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "children": [
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": "For the quartet puzzling tree search only. Only for very small data sets it is necessary to compute an exact maximum likelihood. For larger data sets this option should always be turned on.",
                                        "ctrl": null,
                                        "format": {
                                            "perl": "($value)? \"\" : \"v\\\\n\"",
                                            "python": "( \"v\\n\" , \"\" )[ value ]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "approximate",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "Approximate quartet likelihood (v)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Boolean",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": "Show unresolved quartets. During the quartet puzzling tree search TREE-PUZZLE counts the number of unresolved quartet trees. An unresolved quartet is a quartet where the maximum likelihood values for each of the three possible quartet topologies are so similar that it is not possible to prefer one of them (Strimmer et al., 1997). If this option is selected you will get a detailed list of all star-like quartets. Note, for some data sets there may be a lot of unresolved quartets. In this case a list of all unresolved quartets is probably not very useful and also needs a lot of disk space.",
                                        "ctrl": null,
                                        "format": {
                                            "perl": "($value)? \"u\\\\n\" : \"\"",
                                            "python": "( \"\" , \"u\\n\" )[ value ]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "unresolved",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "List unresolved quartets? (u)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Boolean",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": "If tree reconstruction is selected: number of puzzling steps. Parameter of the quartet puzzling tree search. Generally, the more sequences are used the more puzzling steps are advised. The default value varies depending on the number of sequences (at least 1000).If likelihood mapping is selected: number of quartets in a likelihood mapping analysis. Equal to the number of dots in the likelihood mapping diagram. By default 10000 dots/quartets are assumed. To use all possible quartets in clustered likelihood mapping you have to specify a value of n=0.",
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value and $value != $vdef)? \"n\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"n\\n\" + str(value) + \"\\n\" )[ value is not None and value != vdef]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "puzzling_step",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "Number of puzzling steps (n)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Integer",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": "Writes all intermediate trees (puzzling step trees) used to compute the quartet puzzling tree into a file, either as a list of topologies ordered by number of occurrences (*.ptorder), or as list about the chronological occurrence of the topologies (*.pstep), or both.",
                                        "ctrl": null,
                                        "format": null,
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "list_puzzling",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "List puzzling step trees? (j)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Choice",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": "For displaying purposes of the unrooted quartet puzzling tree only. The default outgroup is the first sequence of the data set.",
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value and $value != $vdef)? \"o\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"o\\n\" + str(value) + \"\\n\" )[ value is not None and value != vdef]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "output",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "Display as outgroup? (o)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Integer",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    }
                                ],
                                "comment": null,
                                "name": "quartet_options",
                                "precond": null,
                                "prompt": "Quartet puzzling options"
                            }
                        ],
                        "comment": null,
                        "name": "reconstruction_options",
                        "precond": {
                            "perl": "$analysis_type eq \"1\"",
                            "python": "analysis_type == \"1\""
                        },
                        "prompt": "Tree reconstruction options"
                    }
                ],
                "comment": null,
                "name": "general_options",
                "precond": null,
                "prompt": "General options"
            },
            {
                "children": [
                    {
                        "argpos": "-10",
                        "command": false,
                        "comment": "Specifies whether nucleotide, amino acid sequences, or twostate data serve as input. The default is automatically set by inspection of the input data. After TREE-PUZZLE has selected an appropriate data type (marked by ?Auto:?) the ?d?-option changes the type in the following order: automatically selected type ! Nucleotides ! Amino acids ! automatically selected type.",
                        "ctrl": null,
                        "format": null,
                        "hidden": false,
                        "main": false,
                        "mandatory": true,
                        "name": "seqtype",
                        "paramfile": "puzzle.params",
                        "precond": null,
                        "prompt": "Type of sequence input data? (d)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "children": [
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "For amino acid sequence data the Dayhoff et al. (Dayhoff) model, the Jones et al. (JTT) model, the Adachi and Hasegawa (mtREV24) model, the Henikoff and Henikoff (BLOSUM 62), the Muller and Vingron (VT), and theWhelan and Goldman (WAG) substitution model are implemented in TREE-PUZZLE.The mtREV24 model describes the evolution of amino acids encoded on mtDNA, and BLOSUM 62 is for distantly related amino acid sequences, as well as the VT model.",
                                "ctrl": null,
                                "format": null,
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "protein_model",
                                "paramfile": "puzzle.params",
                                "precond": null,
                                "prompt": "Model of substitution for protein (m)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Choice",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "argpos": "50",
                                "command": false,
                                "comment": "The maximum likelihood calculation needs the frequency of each nucleotide (amino acid, doublet) as input. TREE-PUZZLE estimates these values from the sequence input data. This option allows specification of other values.",
                                "ctrl": null,
                                "format": {
                                    "perl": "($value)? \"f\\\\n\" : \"\"",
                                    "python": "( \"\"  , \"f\\n\" )[ value ]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "prot_freq",
                                "paramfile": "puzzle.params",
                                "precond": null,
                                "prompt": "Use specified Amino acid frequencies (in %) (f)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Boolean",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "children": [
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "a_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (A)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "r_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (R)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "n_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (N)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "d_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (D)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "c_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (C)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "q_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (Q)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "e_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (E)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "g_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (G)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "h_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (H)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "i_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (I)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "l_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (L)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "k_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (K)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "m_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (M)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "f_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (F)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "p_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (P)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "s_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (S)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "t_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (T)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "w_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (W)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "y_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "pi (Y)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    }
                                ],
                                "comment": null,
                                "name": "specified_prot_freq",
                                "precond": {
                                    "perl": "$prot_freq",
                                    "python": "prot_freq"
                                },
                                "prompt": "Values of specified amino acid frequencies (in %)"
                            }
                        ],
                        "comment": null,
                        "name": "protein_options",
                        "precond": {
                            "perl": "$seqtype == \"2\"",
                            "python": "seqtype == \"2\""
                        },
                        "prompt": "Amino acids options"
                    },
                    {
                        "children": [
                            {
                                "argpos": "10",
                                "command": false,
                                "comment": "The following models are implemented for nucleotides: the general time reversible model (Tavaree, 1986, GTR, e.g.,) model, the Tamura and Nei (TN) model, the Hasegawa et al. (HKY) model, and the Schroniger and von Haeseler (SH) model.The SH model describes the evolution of pairs of dependent nucleotides (pairs are the first and the second nucleotide, the third and the fourth nucleotide and so on). It allows for specification of the transition-transversion ratio.The original model (Schroniger and von Haeseler, 1994) is obtained by setting the transition-transversion parameter to 0.5.The Jukes and Cantor (1969), the Felsenstein (1981), and the Kimura (1980) model are all special cases of the HKY model.",
                                "ctrl": null,
                                "format": null,
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "dna_model",
                                "paramfile": "puzzle.params",
                                "precond": null,
                                "prompt": "Model of substitution for DNA (m)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Choice",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "children": [
                                    {
                                        "argpos": "11",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value and $value != $vdef) ? \"1\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"1\\n\"+ str(value) + \"\\n\" )[ value is not None and value != vdef]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "GTR_acrate",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "A-C rate (1)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value and $value != $vdef) ? \"2\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"2\\n\"+ str(value) + \"\\n\" )[ value is not None and value != vdef]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "GTR_agrate",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "A-G rate (2)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value and $value != $vdef) ? \"3\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"3\\n\"+ str(value) + \"\\n\" )[ value is not None and value != vdef]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "GTR_atrate",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "A-T rate (3)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value and $value != $vdef) ? \"4\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"4\\n\"+ str(value) + \"\\n\" )[ value is not None and value != vdef]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "GTR_cgrate",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "C-G rate (4)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value and $value != $vdef) ? \"5\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"5\\n\" + str(value) +\"\\n\" )[ value is not None and value != vdef]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "GTR_ctrate",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "C-T rate (5)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": null,
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value and $value != $vdef) ? \"6\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"6\\n\" + str(value) +\"\\n\" )[ value is not None and value != vdef]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "GTR_gtrate",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "G-T rate (6)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    }
                                ],
                                "comment": null,
                                "name": "GTR_options",
                                "precond": {
                                    "perl": "$dna_model eq \"4\"",
                                    "python": "dna_model == \"4\""
                                },
                                "prompt": "GTR model rates"
                            },
                            {
                                "children": [
                                    {
                                        "argpos": "11",
                                        "command": false,
                                        "comment": "This option is only available for the SH model. With this option the doublet frequencies are symmetrized. For example, the frequencies of ?AT? and ?TA? are then set to the average of both frequencies.",
                                        "ctrl": null,
                                        "format": {
                                            "perl": "($value)? \"s\\\\n\" : \"\"",
                                            "python": "( \"\" , \"s\\n\" )[ value ]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "symmetrize_frequencies",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "Symmetrize doublet frequencies (s)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Boolean",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    }
                                ],
                                "comment": null,
                                "name": "SH_options",
                                "precond": {
                                    "perl": "$dna_model eq \"4\"",
                                    "python": "dna_model == \"4\""
                                },
                                "prompt": "SH model rates"
                            },
                            {
                                "children": [
                                    {
                                        "argpos": "11",
                                        "command": false,
                                        "comment": "This option is only available for the Tamura-Nei model. With this option the expected (!) transition-transversion ratio for the F84 model have to be entered and TREE-PUZZLE computes the corresponding parameters of the TN model (this depends on base frequencies of the data). This allows to compare the results of TREE-PUZZLE and the PHYLIP maximum likelihood programs which use the F84 model.",
                                        "ctrl": null,
                                        "format": {
                                            "perl": "($value)? \"p\\\\n\" : \"\"",
                                            "python": "( \"\" , \"p\\n\" )[ value ]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "constrain_TN",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "Constrain TN model to F84 model (p)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Boolean",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "12",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value)? \"$value\\\\n\" : \"\"",
                                            "python": "( \"\" , str(value) + \"\\n\" )[ value is not None]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "f84_ratio",
                                        "paramfile": "puzzle.params",
                                        "precond": {
                                            "perl": "$constrain_TN",
                                            "python": "constrain_TN"
                                        },
                                        "prompt": "Expected F84 Transition/transversion ratio",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "13",
                                        "command": false,
                                        "comment": "This option is only available for the TN model. This parameter is the ratio of the rates for pyrimidine transitions and purine transitions. You do not need to specify this parameter as TREE-PUZZLE estimates it from the data. For precise definition please read the section in this manual about models of sequence evolution.",
                                        "ctrl": null,
                                        "format": {
                                            "perl": "(defined $value)? \"r\\\\n$value\\\\n\" : \"\"",
                                            "python": "( \"\" , \"r\\n\" + str(value) +\"\\n\" )[ value is not None ]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "y_r",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "Y/R transition parameter (r)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    }
                                ],
                                "comment": null,
                                "name": "TN_options",
                                "precond": {
                                    "perl": "$dna_model eq \"2\"",
                                    "python": "dna_model == \"2\""
                                },
                                "prompt": "TN model options"
                            },
                            {
                                "argpos": null,
                                "command": false,
                                "comment": "For nucleotide data only. You do not need to specify this parameter as TREE-PUZZLE estimates it from the data. The precise definition of this parameter is given in the section on models of sequence evolution in this manual.",
                                "ctrl": null,
                                "format": {
                                    "perl": "(defined $value) ? \"t\\\\n$value\\\\n\" : \"\"",
                                    "python": "( \"\" , \"t\\n\" + str(value) + \"\\n\" )[ value is not None ]"
                                },
                                "hidden": false,
                                "main": false,
                                "mandatory": false,
                                "name": "ratio",
                                "paramfile": "puzzle.params",
                                "precond": {
                                    "perl": "$dna_model ne \"3\"",
                                    "python": "dna_model != \"3\""
                                },
                                "prompt": "Transition/transversion ratio (t)",
                                "simple": null,
                                "type": {
                                    "biomoby_datatypes": [],
                                    "biotypes": [],
                                    "card": null,
                                    "datatype": {
                                        "class": "Float",
                                        "superclass": null
                                    },
                                    "edam_types": [],
                                    "formats": []
                                }
                            },
                            {
                                "children": [
                                    {
                                        "argpos": "50",
                                        "command": false,
                                        "comment": "The maximum likelihood calculation needs the frequency of each nucleotide (amino acid, doublet) as input. TREE-PUZZLE estimates these values from the sequence input data. This option allows specification of other values.",
                                        "ctrl": null,
                                        "format": {
                                            "perl": "($value)? \"f\\\\n\" : \"\"",
                                            "python": "( \"\"  , \"f\\n\" )[ value ]"
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": false,
                                        "name": "use_specified_nuc",
                                        "paramfile": "puzzle.params",
                                        "precond": null,
                                        "prompt": "Use specified values?",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Boolean",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "51",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "a_nuc_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": {
                                            "perl": "$use_specified_nuc",
                                            "python": "use_specified_nuc"
                                        },
                                        "prompt": "pi (A)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "52",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "c_nuc_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": {
                                            "perl": "$use_specified_nuc",
                                            "python": "use_specified_nuc"
                                        },
                                        "prompt": "pi (C)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    },
                                    {
                                        "argpos": "53",
                                        "command": false,
                                        "comment": null,
                                        "ctrl": null,
                                        "format": {
                                            "perl": "\"$value\\\\n\"",
                                            "python": "str(value) + \"\\n\""
                                        },
                                        "hidden": false,
                                        "main": false,
                                        "mandatory": true,
                                        "name": "g_nuc_freq",
                                        "paramfile": "puzzle.params",
                                        "precond": {
                                            "perl": "$use_specified_nuc",
                                            "python": "use_specified_nuc"
                                        },
                                        "prompt": "pi (G)",
                                        "simple": null,
                                        "type": {
                                            "biomoby_datatypes": [],
                                            "biotypes": [],
                                            "card": null,
                                            "datatype": {
                                                "class": "Float",
                                                "superclass": null
                                            },
                                            "edam_types": [],
                                            "formats": []
                                        }
                                    }
                                ],
                                "comment": null,
                                "name": "nuc_freq",
                                "precond": null,
                                "prompt": "Base frequencies (in %) (f)"
                            }
                        ],
                        "comment": null,
                        "name": "dna_options",
                        "precond": {
                            "perl": "$seqtype eq \"1\"",
                            "python": "seqtype == \"1\""
                        },
                        "prompt": "DNA options"
                    }
                ],
                "comment": null,
                "name": "substitution_options",
                "precond": null,
                "prompt": "Substitution process options"
            },
            {
                "children": [
                    {
                        "argpos": "20",
                        "command": false,
                        "comment": "TREE-PUZZLE provides several different models of rate heterogeneity: uniform rate over all sites (rate homogeneity), Gamma distributed rates, two rates (1 invariable + 1 variable), and a mixed model (1 invariable rate + Gamma distributed rates). All necessary parameters can be estimated by TREE-PUZZLE. Note that whenever invariable sites are taken into account the parameter estimation will invoke the ?e? option to use an exact likelihood function. For more detailed information please read the section in this manual about models of sequence evolution. See also option ?m? (model of substitution).",
                        "ctrl": null,
                        "format": null,
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "rate_heterogeneity",
                        "paramfile": "puzzle.params",
                        "precond": null,
                        "prompt": "Model of rate heterogeneity (w)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Choice",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "21",
                        "command": false,
                        "comment": "This is the so-called shape parameter of the Gamma distribution.",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \"a\\\\n$value\\\\n\" : \"\"",
                            "python": "( \"\" , \"a\\n\" + str(value) +\"\\n\" )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "alpha",
                        "paramfile": "puzzle.params",
                        "precond": {
                            "perl": "$rate_heterogeneity eq \"2\" or $rate_heterogeneity eq \"4\"",
                            "python": "rate_heterogeneity == \"2\" or rate_heterogeneity == \"4\""
                        },
                        "prompt": "Gamma rate heterogeneity parameter alpha (a)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "21",
                        "command": false,
                        "comment": "Number of rate categories (4-16) for the discrete Gamma distribution (rate heterogeneity).",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value and $value != $vdef)? \"c\\\\n$value\\\\n\" : \"\"",
                            "python": "( \"\" , \"c\\n\" + str(value) +\"\\n\" )[ value is not None and value != vdef]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "gamma_number",
                        "paramfile": "puzzle.params",
                        "precond": {
                            "perl": "$rate_heterogeneity eq \"2\" or $rate_heterogeneity eq \"4\"",
                            "python": "rate_heterogeneity == \"2\" or rate_heterogeneity == \"4\""
                        },
                        "prompt": "Number of Gamma rate categories (c)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Integer",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    },
                    {
                        "argpos": "21",
                        "command": false,
                        "comment": "Probability of a site to be invariable. This parameter can be estimated from the data by TREE-PUZZLE (only if the approximation option for the likelihood function is turned off).",
                        "ctrl": null,
                        "format": {
                            "perl": "(defined $value)? \"i\\\\n$value\\\\n\" : \"\"",
                            "python": "( \"\" , \"i\\n\" + str(value) +\"\\n\" )[ value is not None ]"
                        },
                        "hidden": false,
                        "main": false,
                        "mandatory": false,
                        "name": "invariable",
                        "paramfile": "puzzle.params",
                        "precond": {
                            "perl": "$rate_heterogeneity eq \"3\" or $rate_heterogeneity eq \"4\"",
                            "python": "rate_heterogeneity == \"3\" or rate_heterogeneity == \"4\""
                        },
                        "prompt": "Fraction of invariable sites (i)",
                        "simple": null,
                        "type": {
                            "biomoby_datatypes": [],
                            "biotypes": [],
                            "card": null,
                            "datatype": {
                                "class": "Float",
                                "superclass": null
                            },
                            "edam_types": [],
                            "formats": []
                        }
                    }
                ],
                "comment": null,
                "name": "rate_options",
                "precond": null,
                "prompt": "Rate heterogeneity options"
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "name": "puzzle",
    "outputs": {
        "children": [
            {
                "comment": null,
                "filenames": {
                    "perl": "\"$infile.puzzle\"",
                    "python": "str(infile) + \".puzzle\""
                },
                "hidden": false,
                "main": false,
                "name": "outfile",
                "output_type": "file",
                "precond": null,
                "prompt": "Output file",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Text",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            },
            {
                "comment": null,
                "filenames": {
                    "perl": "\"$infile.tree\"",
                    "python": "str(infile) + \".tree\""
                },
                "hidden": false,
                "main": false,
                "name": "outtree",
                "output_type": "file",
                "precond": null,
                "prompt": "Output tree",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Tree",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": [
                        "NEWICK"
                    ]
                }
            },
            {
                "comment": null,
                "filenames": {
                    "perl": "\"$infile.dist\"",
                    "python": "str(infile) + \".dist\""
                },
                "hidden": false,
                "main": false,
                "name": "outdist",
                "output_type": "file",
                "precond": null,
                "prompt": "Output distance",
                "simple": null,
                "type": {
                    "biomoby_datatypes": [],
                    "biotypes": [],
                    "card": null,
                    "datatype": {
                        "class": "Text",
                        "superclass": null
                    },
                    "edam_types": [],
                    "formats": []
                }
            }
        ],
        "comment": null,
        "name": null,
        "precond": null,
        "prompt": null
    },
    "package": null,
    "references": [
        {
            "doi": null,
            "label": "Strimmer, K., and A. von Haeseler. 1996. Quartet puzzling:A quartet maximum likelihood method for reconstructing tree topologies. Mol. Biol. Evol. 13: 964-969.",
            "url": null
        }
    ],
    "source_links": [
        "http://www.tree-puzzle.de/"
    ],
    "title": "Tree-Puzzle",
    "type": "program",
    "version": "5.2"
}